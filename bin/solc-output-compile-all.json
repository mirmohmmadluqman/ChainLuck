{
    "contracts": {
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
            "ConfirmedOwner": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferRequested",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "acceptOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "The ConfirmedOwner contract",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60803460b957601f61031538819003918201601f19168301916001600160401b0383118484101760bd5780849260209460405283398101031260b957516001600160a01b0381169081900360b95780156074575f80546001600160a01b03191691909117905560405161024390816100d28239f35b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816379ba509714610163575080638da5cb5b1461013c5763f2fde38b1461003d575f80fd5b34610138576020366003190112610138576004356001600160a01b03811690819003610138575f546001600160a01b0316338190036100fa573382146100b557600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f36600319011261013857600154906001600160a01b03821633036101d257505f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fdfea2646970667358221220258f3568e6c5e79cbe3dc8e074320dbb81fcafa98e5bd527644a8a84ccbd9e4164736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xB9 JUMPI PUSH1 0x1F PUSH2 0x315 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xBD JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xB9 JUMPI DUP1 ISZERO PUSH1 0x74 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x243 SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x163 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xFA JUMPI CALLER DUP3 EQ PUSH2 0xB5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1D2 JUMPI POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP16 CALLDATALOAD PUSH9 0xE6C5E79CBE3DC8E074 ORIGIN 0xD 0xBB DUP2 0xFC 0xAF 0xA9 DUP15 JUMPDEST 0xD5 0x27 PUSH5 0x4A8A84CCBD SWAP15 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "240:141:0:-:0;;;;;;;;;;;;;-1:-1:-1;;240:141:0;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;598:22:1;;240:141:0;;-1:-1:-1;240:141:0;;-1:-1:-1;;;;;;240:141:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:141:0;;;;;;-1:-1:-1;240:141:0;;;;;-1:-1:-1;240:141:0"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816379ba509714610163575080638da5cb5b1461013c5763f2fde38b1461003d575f80fd5b34610138576020366003190112610138576004356001600160a01b03811690819003610138575f546001600160a01b0316338190036100fa573382146100b557600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f36600319011261013857600154906001600160a01b03821633036101d257505f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fdfea2646970667358221220258f3568e6c5e79cbe3dc8e074320dbb81fcafa98e5bd527644a8a84ccbd9e4164736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x163 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xFA JUMPI CALLER DUP3 EQ PUSH2 0xB5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1D2 JUMPI POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP16 CALLDATALOAD PUSH9 0xE6C5E79CBE3DC8E074 ORIGIN 0xD 0xBB DUP2 0xFC 0xAF 0xA9 DUP15 JUMPDEST 0xD5 0x27 PUSH5 0x4A8A84CCBD SWAP15 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "240:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:141:0;;;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;;;-1:-1:-1;;;;;240:141:0;1918:10:1;:21;;;240:141:0;;1918:10:1;1649:16;;240:141:0;;1700:19:1;240:141:0;;-1:-1:-1;;;;;;240:141:0;;;;;1731:39:1;-1:-1:-1;;1731:39:1;240:141:0;;;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;;;;;;-1:-1:-1;;240:141:0;;;;;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;;;;;;;-1:-1:-1;;240:141:0;;;;1150:14:1;240:141:0;;-1:-1:-1;;;;;240:141:0;;1136:10:1;:28;240:141:0;;-1:-1:-1;240:141:0;;;-1:-1:-1;;;;;;240:141:0;;;1136:10:1;240:141:0;;;;;;;-1:-1:-1;240:141:0;-1:-1:-1;;;;;240:141:0;;1295:42:1;;240:141:0;1295:42:1;240:141:0;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;-1:-1:-1;;;240:141:0;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "115800",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "acceptOwnership()": "50159",
                            "owner()": "2301",
                            "transferOwnership(address)": "28132"
                        }
                    },
                    "methodIdentifiers": {
                        "acceptOwnership()": "79ba5097",
                        "owner()": "8da5cb5b",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 29,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
                            "label": "s_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 31,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
                            "label": "s_pendingOwner",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptOwnership()": {
                            "notice": "Allows an ownership transfer to be completed by the recipient."
                        },
                        "owner()": {
                            "notice": "Get the current owner"
                        },
                        "transferOwnership(address)": {
                            "notice": "Allows an owner to begin transferring ownership to a new address."
                        }
                    },
                    "notice": "A contract with helpers for basic contract ownership.",
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
            "ConfirmedOwnerWithProposal": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "pendingOwner",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferRequested",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "acceptOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "The ConfirmedOwner contract",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "abi_decode_address_fromMemory": {
                                "entryPoint": 378,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60803461016257601f6103d238819003918201601f19168301916001600160401b0383118484101761016657808492604094855283398101031261016257610052602061004b8361017a565b920161017a565b6001600160a01b0390911690811561011d575f80546001600160a01b031916831790556001600160a01b03169081610094575b604051610243908161018f8239f35b3382146100d857600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a35f80610085565b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036101625756fe6080806040526004361015610012575f80fd5b5f3560e01c90816379ba509714610163575080638da5cb5b1461013c5763f2fde38b1461003d575f80fd5b34610138576020366003190112610138576004356001600160a01b03811690819003610138575f546001600160a01b0316338190036100fa573382146100b557600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f36600319011261013857600154906001600160a01b03821633036101d257505f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fdfea2646970667358221220442b90ec7de6077afc0452282b435ff6a9894396a6507e980b0f53a1ce7250e964736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x162 JUMPI PUSH1 0x1F PUSH2 0x3D2 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x166 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x162 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x17A JUMP JUMPDEST SWAP3 ADD PUSH2 0x17A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP1 DUP2 PUSH2 0x18F DUP3 CODECOPY RETURN JUMPDEST CALLER DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 PUSH0 DUP1 PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x162 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x163 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xFA JUMPI CALLER DUP3 EQ PUSH2 0xB5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1D2 JUMPI POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0x2B SWAP1 EOFCREATE 0x7D DUPN 0x7 PUSH27 0xFC0452282B435FF6A9894396A6507E980B0F53A1CE7250E964736F PUSH13 0x634300081E0033000000000000 ",
                        "sourceMap": "216:1893:1:-:0;;;;;;;;;;;;;-1:-1:-1;;216:1893:1;;;;-1:-1:-1;;;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;216:1893:1;;;;598:22;;216:1893;;-1:-1:-1;216:1893:1;;-1:-1:-1;;;;;;216:1893:1;;;;;-1:-1:-1;;;;;216:1893:1;;;680:79;;-1:-1:-1;216:1893:1;;;;;;;;;680:79;1655:10;1649:16;;216:1893;;;;;-1:-1:-1;;;;;;216:1893:1;;;;;1731:39;-1:-1:-1;;1731:39:1;680:79;;;;216:1893;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;216:1893:1;;;;;;-1:-1:-1;216:1893:1;;;;;-1:-1:-1;216:1893:1;;;;-1:-1:-1;;;;;216:1893:1;;;;;;:::o"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816379ba509714610163575080638da5cb5b1461013c5763f2fde38b1461003d575f80fd5b34610138576020366003190112610138576004356001600160a01b03811690819003610138575f546001600160a01b0316338190036100fa573382146100b557600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f36600319011261013857600154906001600160a01b03821633036101d257505f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fdfea2646970667358221220442b90ec7de6077afc0452282b435ff6a9894396a6507e980b0f53a1ce7250e964736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x163 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xFA JUMPI CALLER DUP3 EQ PUSH2 0xB5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1D2 JUMPI POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0x2B SWAP1 EOFCREATE 0x7D DUPN 0x7 PUSH27 0xFC0452282B435FF6A9894396A6507E980B0F53A1CE7250E964736F PUSH13 0x634300081E0033000000000000 ",
                        "sourceMap": "216:1893:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;216:1893:1;;;;;;-1:-1:-1;;;;;216:1893:1;;;;;;;;;;-1:-1:-1;;;;;216:1893:1;1918:10;:21;;;216:1893;;1918:10;1649:16;;216:1893;;1700:19;216:1893;;-1:-1:-1;;;;;;216:1893:1;;;;;1731:39;-1:-1:-1;;1731:39:1;216:1893;;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;-1:-1:-1;;216:1893:1;;;;;;;;-1:-1:-1;;;;;216:1893:1;;;;;;;;;;;;;;-1:-1:-1;;216:1893:1;;;;1150:14;216:1893;;-1:-1:-1;;;;;216:1893:1;;1136:10;:28;216:1893;;-1:-1:-1;216:1893:1;;;-1:-1:-1;;;;;;216:1893:1;;;1136:10;216:1893;;;;;;;-1:-1:-1;216:1893:1;-1:-1:-1;;;;;216:1893:1;;1295:42;;216:1893;1295:42;216:1893;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;-1:-1:-1;;;216:1893:1;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "115800",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "acceptOwnership()": "50159",
                            "owner()": "2301",
                            "transferOwnership(address)": "28132"
                        },
                        "internal": {
                            "_transferOwnership(address)": "infinite",
                            "_validateOwnership()": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "acceptOwnership()": "79ba5097",
                        "owner()": "8da5cb5b",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 29,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
                            "label": "s_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 31,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
                            "label": "s_pendingOwner",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptOwnership()": {
                            "notice": "Allows an ownership transfer to be completed by the recipient."
                        },
                        "owner()": {
                            "notice": "Get the current owner"
                        },
                        "transferOwnership(address)": {
                            "notice": "Allows an owner to begin transferring ownership to a new address."
                        }
                    },
                    "notice": "A contract with helpers for basic contract ownership.",
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
            "IOwnable": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "acceptOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "acceptOwnership()": "79ba5097",
                        "owner()": "8da5cb5b",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
            "VRFConsumerBaseV2Plus": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "have",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "want",
                                "type": "address"
                            }
                        ],
                        "name": "OnlyCoordinatorCanFulfill",
                        "type": "error"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "have",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "coordinator",
                                "type": "address"
                            }
                        ],
                        "name": "OnlyOwnerOrCoordinator",
                        "type": "error"
                    },
                    {
                        "inputs": [],
                        "name": "ZeroAddress",
                        "type": "error"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "CoordinatorSet",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferRequested",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "acceptOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "requestId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256[]",
                                "name": "randomWords",
                                "type": "uint256[]"
                            }
                        ],
                        "name": "rawFulfillRandomWords",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "s_vrfCoordinator",
                        "outputs": [
                            {
                                "internalType": "contract IVRFCoordinatorV2Plus",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "setCoordinator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).",
                    "kind": "dev",
                    "methods": {
                        "constructor": {
                            "params": {
                                "_vrfCoordinator": "address of VRFCoordinator contract"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "acceptOwnership()": "79ba5097",
                        "owner()": "8da5cb5b",
                        "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
                        "s_vrfCoordinator()": "9eccacf6",
                        "setCoordinator(address)": "8ea98117",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x2162cebe5cef8115326c8ca9f37a864d9ac27d8fa89e27a8842ca108a2d38b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://814a3f6634092d7f10f0380f0ac0fbbec75e24164e7339e124ff6f5d78bd52e7\",\"dweb:/ipfs/QmUyGeD57zC8rrPWqngFZKyFruf7sRRDMbtrEt6SX9rNED\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 29,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
                            "label": "s_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 31,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
                            "label": "s_pendingOwner",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        },
                        {
                            "astId": 231,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
                            "label": "s_vrfCoordinator",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_contract(IVRFCoordinatorV2Plus)380"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_contract(IVRFCoordinatorV2Plus)380": {
                            "encoding": "inplace",
                            "label": "contract IVRFCoordinatorV2Plus",
                            "numberOfBytes": "20"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptOwnership()": {
                            "notice": "Allows an ownership transfer to be completed by the recipient."
                        },
                        "owner()": {
                            "notice": "Get the current owner"
                        },
                        "setCoordinator(address)": {
                            "notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
                        },
                        "transferOwnership(address)": {
                            "notice": "Allows an owner to begin transferring ownership to a new address."
                        }
                    },
                    "notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
            "IVRFCoordinatorV2Plus": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "acceptSubscriptionOwnerTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "consumer",
                                "type": "address"
                            }
                        ],
                        "name": "addConsumer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "cancelSubscription",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "createSubscription",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "fundSubscriptionWithNative",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "startIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "maxCount",
                                "type": "uint256"
                            }
                        ],
                        "name": "getActiveSubscriptionIds",
                        "outputs": [
                            {
                                "internalType": "uint256[]",
                                "name": "",
                                "type": "uint256[]"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "getSubscription",
                        "outputs": [
                            {
                                "internalType": "uint96",
                                "name": "balance",
                                "type": "uint96"
                            },
                            {
                                "internalType": "uint96",
                                "name": "nativeBalance",
                                "type": "uint96"
                            },
                            {
                                "internalType": "uint64",
                                "name": "reqCount",
                                "type": "uint64"
                            },
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address[]",
                                "name": "consumers",
                                "type": "address[]"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "pendingRequestExists",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "consumer",
                                "type": "address"
                            }
                        ],
                        "name": "removeConsumer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "keyHash",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "subId",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint16",
                                        "name": "requestConfirmations",
                                        "type": "uint16"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "callbackGasLimit",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "numWords",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bytes",
                                        "name": "extraArgs",
                                        "type": "bytes"
                                    }
                                ],
                                "internalType": "struct VRFV2PlusClient.RandomWordsRequest",
                                "name": "req",
                                "type": "tuple"
                            }
                        ],
                        "name": "requestRandomWords",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "requestId",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "requestSubscriptionOwnerTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "acceptSubscriptionOwnerTransfer(uint256)": {
                            "details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
                            "params": {
                                "subId": "- ID of the subscription"
                            }
                        },
                        "addConsumer(uint256,address)": {
                            "params": {
                                "consumer": "- New consumer which can use the subscription",
                                "subId": "- ID of the subscription"
                            }
                        },
                        "cancelSubscription(uint256,address)": {
                            "params": {
                                "subId": "- ID of the subscription",
                                "to": "- Where to send the remaining LINK to"
                            }
                        },
                        "createSubscription()": {
                            "details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);",
                            "returns": {
                                "subId": "- A unique subscription id."
                            }
                        },
                        "fundSubscriptionWithNative(uint256)": {
                            "params": {
                                "subId": "- ID of the subscription"
                            }
                        },
                        "getActiveSubscriptionIds(uint256,uint256)": {
                            "details": "the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state",
                            "params": {
                                "maxCount": "maximum number of subscriptions to return, 0 to return all",
                                "startIndex": "index of the subscription to start from"
                            }
                        },
                        "getSubscription(uint256)": {
                            "params": {
                                "subId": "- ID of the subscription"
                            },
                            "returns": {
                                "balance": "- LINK balance of the subscription in juels.",
                                "consumers": "- list of consumer address which are able to use this subscription.",
                                "nativeBalance": "- native balance of the subscription in wei.",
                                "owner": "- owner of the subscription.",
                                "reqCount": "- Requests count of subscription."
                            }
                        },
                        "removeConsumer(uint256,address)": {
                            "params": {
                                "consumer": "- Consumer to remove from the subscription",
                                "subId": "- ID of the subscription"
                            }
                        },
                        "requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": {
                            "params": {
                                "req": "- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"
                            },
                            "returns": {
                                "requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
                            }
                        },
                        "requestSubscriptionOwnerTransfer(uint256,address)": {
                            "params": {
                                "newOwner": "- proposed new owner of the subscription",
                                "subId": "- ID of the subscription"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
                        "addConsumer(uint256,address)": "bec4c08c",
                        "cancelSubscription(uint256,address)": "0ae09540",
                        "createSubscription()": "a21a23e4",
                        "fundSubscriptionWithNative(uint256)": "95b55cfc",
                        "getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
                        "getSubscription(uint256)": "dc311dd3",
                        "pendingRequestExists(uint256)": "41af6c87",
                        "removeConsumer(uint256,address)": "cb631797",
                        "requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": "9b1c385e",
                        "requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x2162cebe5cef8115326c8ca9f37a864d9ac27d8fa89e27a8842ca108a2d38b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://814a3f6634092d7f10f0380f0ac0fbbec75e24164e7339e124ff6f5d78bd52e7\",\"dweb:/ipfs/QmUyGeD57zC8rrPWqngFZKyFruf7sRRDMbtrEt6SX9rNED\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptSubscriptionOwnerTransfer(uint256)": {
                            "notice": "Accept subscription owner transfer."
                        },
                        "addConsumer(uint256,address)": {
                            "notice": "Add a consumer to a VRF subscription."
                        },
                        "cancelSubscription(uint256,address)": {
                            "notice": "Cancel a subscription"
                        },
                        "createSubscription()": {
                            "notice": "Create a VRF subscription."
                        },
                        "fundSubscriptionWithNative(uint256)": {
                            "notice": "Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."
                        },
                        "getActiveSubscriptionIds(uint256,uint256)": {
                            "notice": "Paginate through all active VRF subscriptions."
                        },
                        "getSubscription(uint256)": {
                            "notice": "Get a VRF subscription."
                        },
                        "removeConsumer(uint256,address)": {
                            "notice": "Remove a consumer from a VRF subscription."
                        },
                        "requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": {
                            "notice": "Request a set of random words."
                        },
                        "requestSubscriptionOwnerTransfer(uint256,address)": {
                            "notice": "Request subscription owner transfer."
                        }
                    },
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
            "IVRFMigratableConsumerV2Plus": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "CoordinatorSet",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "setCoordinator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "This interface is designed to be used in VRFConsumerBaseV2Plus.",
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "setCoordinator(address)": "8ea98117"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "setCoordinator(address)": {
                            "notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
                        }
                    },
                    "notice": "The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.",
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
            "IVRFSubscriptionV2Plus": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "acceptSubscriptionOwnerTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "consumer",
                                "type": "address"
                            }
                        ],
                        "name": "addConsumer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "cancelSubscription",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "createSubscription",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "fundSubscriptionWithNative",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "startIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "maxCount",
                                "type": "uint256"
                            }
                        ],
                        "name": "getActiveSubscriptionIds",
                        "outputs": [
                            {
                                "internalType": "uint256[]",
                                "name": "",
                                "type": "uint256[]"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "getSubscription",
                        "outputs": [
                            {
                                "internalType": "uint96",
                                "name": "balance",
                                "type": "uint96"
                            },
                            {
                                "internalType": "uint96",
                                "name": "nativeBalance",
                                "type": "uint96"
                            },
                            {
                                "internalType": "uint64",
                                "name": "reqCount",
                                "type": "uint64"
                            },
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address[]",
                                "name": "consumers",
                                "type": "address[]"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            }
                        ],
                        "name": "pendingRequestExists",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "consumer",
                                "type": "address"
                            }
                        ],
                        "name": "removeConsumer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "subId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "requestSubscriptionOwnerTransfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "acceptSubscriptionOwnerTransfer(uint256)": {
                            "details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
                            "params": {
                                "subId": "- ID of the subscription"
                            }
                        },
                        "addConsumer(uint256,address)": {
                            "params": {
                                "consumer": "- New consumer which can use the subscription",
                                "subId": "- ID of the subscription"
                            }
                        },
                        "cancelSubscription(uint256,address)": {
                            "params": {
                                "subId": "- ID of the subscription",
                                "to": "- Where to send the remaining LINK to"
                            }
                        },
                        "createSubscription()": {
                            "details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);",
                            "returns": {
                                "subId": "- A unique subscription id."
                            }
                        },
                        "fundSubscriptionWithNative(uint256)": {
                            "params": {
                                "subId": "- ID of the subscription"
                            }
                        },
                        "getActiveSubscriptionIds(uint256,uint256)": {
                            "details": "the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state",
                            "params": {
                                "maxCount": "maximum number of subscriptions to return, 0 to return all",
                                "startIndex": "index of the subscription to start from"
                            }
                        },
                        "getSubscription(uint256)": {
                            "params": {
                                "subId": "- ID of the subscription"
                            },
                            "returns": {
                                "balance": "- LINK balance of the subscription in juels.",
                                "consumers": "- list of consumer address which are able to use this subscription.",
                                "nativeBalance": "- native balance of the subscription in wei.",
                                "owner": "- owner of the subscription.",
                                "reqCount": "- Requests count of subscription."
                            }
                        },
                        "removeConsumer(uint256,address)": {
                            "params": {
                                "consumer": "- Consumer to remove from the subscription",
                                "subId": "- ID of the subscription"
                            }
                        },
                        "requestSubscriptionOwnerTransfer(uint256,address)": {
                            "params": {
                                "newOwner": "- proposed new owner of the subscription",
                                "subId": "- ID of the subscription"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
                        "addConsumer(uint256,address)": "bec4c08c",
                        "cancelSubscription(uint256,address)": "0ae09540",
                        "createSubscription()": "a21a23e4",
                        "fundSubscriptionWithNative(uint256)": "95b55cfc",
                        "getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
                        "getSubscription(uint256)": "dc311dd3",
                        "pendingRequestExists(uint256)": "41af6c87",
                        "removeConsumer(uint256,address)": "cb631797",
                        "requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptSubscriptionOwnerTransfer(uint256)": {
                            "notice": "Accept subscription owner transfer."
                        },
                        "addConsumer(uint256,address)": {
                            "notice": "Add a consumer to a VRF subscription."
                        },
                        "cancelSubscription(uint256,address)": {
                            "notice": "Cancel a subscription"
                        },
                        "createSubscription()": {
                            "notice": "Create a VRF subscription."
                        },
                        "fundSubscriptionWithNative(uint256)": {
                            "notice": "Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."
                        },
                        "getActiveSubscriptionIds(uint256,uint256)": {
                            "notice": "Paginate through all active VRF subscriptions."
                        },
                        "getSubscription(uint256)": {
                            "notice": "Get a VRF subscription."
                        },
                        "removeConsumer(uint256,address)": {
                            "notice": "Remove a consumer from a VRF subscription."
                        },
                        "requestSubscriptionOwnerTransfer(uint256,address)": {
                            "notice": "Request subscription owner transfer."
                        }
                    },
                    "notice": "The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.",
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
            "VRFV2PlusClient": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "EXTRA_ARGS_V1_TAG",
                        "outputs": [
                            {
                                "internalType": "bytes4",
                                "name": "",
                                "type": "bytes4"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "6080806040523460175760769081601c823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63f7514ab4146023575f80fd5b5f366003190112603c5763125fa26760e31b8152602090f35b5f80fdfea2646970667358221220864e831db822a026bb3f71b8024cb9e14fab11df216d7d0eda473d91f48efe1b64736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x76 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3C JUMPI PUSH4 0x125FA267 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4E DUP4 SAR 0xB8 0x22 LOG0 0x26 0xBB EXTCODEHASH PUSH18 0xB8024CB9E14FAB11DF216D7D0EDA473D91F4 DUP15 INVALID SHL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "82:560:7:-:0;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "60808060405260043610156011575f80fd5b5f3560e01c63f7514ab4146023575f80fd5b5f366003190112603c5763125fa26760e31b8152602090f35b5f80fdfea2646970667358221220864e831db822a026bb3f71b8024cb9e14fab11df216d7d0eda473d91f48efe1b64736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3C JUMPI PUSH4 0x125FA267 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4E DUP4 SAR 0xB8 0x22 LOG0 0x26 0xBB EXTCODEHASH PUSH18 0xB8024CB9E14FAB11DF216D7D0EDA473D91F4 DUP15 INVALID SHL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "82:560:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;82:560:7;;;;-1:-1:-1;;;82:560:7;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "23600",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "EXTRA_ARGS_V1_TAG()": "133"
                        },
                        "internal": {
                            "_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "EXTRA_ARGS_V1_TAG()": "f7514ab4"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x2162cebe5cef8115326c8ca9f37a864d9ac27d8fa89e27a8842ca108a2d38b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://814a3f6634092d7f10f0380f0ac0fbbec75e24164e7339e124ff6f5d78bd52e7\",\"dweb:/ipfs/QmUyGeD57zC8rrPWqngFZKyFruf7sRRDMbtrEt6SX9rNED\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol": {
            "Raffle": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "entranceFee",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "interval",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "_vrfCoordinator",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "gaselane",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "SubscriptionId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint32",
                                "name": "callbackGasLimit",
                                "type": "uint32"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [],
                        "name": "NotEnoughEthEntered",
                        "type": "error"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "have",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "want",
                                "type": "address"
                            }
                        ],
                        "name": "OnlyCoordinatorCanFulfill",
                        "type": "error"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "have",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "coordinator",
                                "type": "address"
                            }
                        ],
                        "name": "OnlyOwnerOrCoordinator",
                        "type": "error"
                    },
                    {
                        "inputs": [],
                        "name": "ZeroAddress",
                        "type": "error"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "CoordinatorSet",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferRequested",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "player",
                                "type": "address"
                            }
                        ],
                        "name": "RaffleEntered",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "I_ENTRANCEFEE",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "acceptOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "enterRaffle",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getEntranceFee",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "pickWinner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "requestId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256[]",
                                "name": "randomWords",
                                "type": "uint256[]"
                            }
                        ],
                        "name": "rawFulfillRandomWords",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "s_vrfCoordinator",
                        "outputs": [
                            {
                                "internalType": "contract IVRFCoordinatorV2Plus",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_vrfCoordinator",
                                "type": "address"
                            }
                        ],
                        "name": "setCoordinator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Mir Mohmmad Luqman",
                    "details": "Implements Chainlink VRFv2.5",
                    "kind": "dev",
                    "methods": {},
                    "title": "RAFFLE_LOTTERY",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "6101203461015b57601f6108e038819003918201601f19168301916001600160401b0383118484101761015f5780849260c09460405283398101031261015b578051602082015160408301516001600160a01b0381169392919084900361015b5760608301519160a060808501519401519463ffffffff8616860361015b573315610116575f80546001600160a01b03191633179055801561010757600280546001600160a01b0319169190911790554260045560805260e05260a05260c0526101005260405161076c9081610174823960805181818161059001526106f1015260a05181610410015260c05181610436015260e0518161037d015261010051816104710152f35b63d92e233d60e01b5f5260045ffd5b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c806309bc33a7146106da5780631fe543e31461065c5780632cfcc539146105835780635d495aea1461035f57806379ba5097146102b45780638c5f83ee146102af5780638da5cb5b146102885780638ea98117146101ae5780639eccacf6146101865763f2fde38b14610087575f80fd5b34610182576020366003190112610182576004356001600160a01b03811690819003610182575f546001600160a01b031633819003610144573382146100ff57600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610182575f366003190112610182576002546040516001600160a01b039091168152602090f35b34610182576020366003190112610182576004356001600160a01b03811690819003610182575f546001600160a01b03163381141580610273575b6102495750801561023a576020817fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b63d92e233d60e01b5f5260045ffd5b60025463061db9c160e01b5f908152336004526024929092526001600160a01b0316604452606490fd5b506002546001600160a01b03163314156101e9565b34610182575f366003190112610182575f546040516001600160a01b039091168152602090f35b6106da565b34610182575f366003190112610182576001546001600160a01b0381163303610321575f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b34610182575f36600319011261018257600454420342811161056f577f000000000000000000000000000000000000000000000000000000000000000011610182576040516020810181811067ffffffffffffffff82111761055b576040525f81526040519063125fa26760e31b60208301525115156024820152602481526103e9604482610714565b60405160c081019080821067ffffffffffffffff83111761055b5761ffff926020926040527f000000000000000000000000000000000000000000000000000000000000000082528282017f000000000000000000000000000000000000000000000000000000000000000081525f61010460408501946003865286606082019563ffffffff7f000000000000000000000000000000000000000000000000000000000000000016875263ffffffff608084016001815260a085019283528160018060a01b0360025416996040519d8e9c8d9b8c99634d8e1c2f60e11b8b528960048c01525160248b01525160448a01525116606488015251166084860152511660a48401525160c060c484015280519182918260e4860152018484015e8181018301849052601f01601f191681010301925af180156105505761052957005b602090813d8311610549575b61053f8183610714565b8101031261018257005b503d610535565b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f366003190112610182577f000000000000000000000000000000000000000000000000000000000000000034101561064d576003546801000000000000000081101561055b576001810180600355811015610639577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01336bffffffffffffffffffffffff60a01b825416179055337f634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb475f80a2005b634e487b7160e01b5f52603260045260245ffd5b631ab4e45d60e11b5f5260045ffd5b346101825760403660031901126101825760243567ffffffffffffffff811161018257366023820112156101825780600401359067ffffffffffffffff821161018257602490369260051b010111610182576002546001600160a01b0316338190036106c457005b63073e64fd60e21b5f523360045260245260445ffd5b34610182575f3660031901126101825760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b90601f8019910116810190811067ffffffffffffffff82111761055b5760405256fea2646970667358221220b5e7d3fb77c3aec7103404eb222a5dfacc61227ae83ae882b993c36120b82ab164736f6c634300081e0033",
                        "opcodes": "PUSH2 0x120 CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x1F PUSH2 0x8E0 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x15F JUMPI DUP1 DUP5 SWAP3 PUSH1 0xC0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x15B JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 SUB PUSH2 0x15B JUMPI PUSH1 0x60 DUP4 ADD MLOAD SWAP2 PUSH1 0xA0 PUSH1 0x80 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP5 PUSH4 0xFFFFFFFF DUP7 AND DUP7 SUB PUSH2 0x15B JUMPI CALLER ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x4 SSTORE PUSH1 0x80 MSTORE PUSH1 0xE0 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH2 0x100 MSTORE PUSH1 0x40 MLOAD PUSH2 0x76C SWAP1 DUP2 PUSH2 0x174 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x590 ADD MSTORE PUSH2 0x6F1 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x410 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x436 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x37D ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x471 ADD MSTORE RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x5D495AEA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8C5F83EE EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x186 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x144 JUMPI CALLER DUP3 EQ PUSH2 0xFF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x273 JUMPI JUMPDEST PUSH2 0x249 JUMPI POP DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x6DA JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x321 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x56F JUMPI PUSH32 0x0 GT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55B JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x3E9 PUSH1 0x44 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x55B JUMPI PUSH2 0xFFFF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x40 MSTORE PUSH32 0x0 DUP3 MSTORE DUP3 DUP3 ADD PUSH32 0x0 DUP2 MSTORE PUSH0 PUSH2 0x104 PUSH1 0x40 DUP6 ADD SWAP5 PUSH1 0x3 DUP7 MSTORE DUP7 PUSH1 0x60 DUP3 ADD SWAP6 PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x80 DUP5 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP10 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP12 MSTORE DUP10 PUSH1 0x4 DUP13 ADD MSTORE MLOAD PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD AND PUSH1 0x84 DUP7 ADD MSTORE MLOAD AND PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0xC4 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xE4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x550 JUMPI PUSH2 0x529 JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x549 JUMPI JUMPDEST PUSH2 0x53F DUP2 DUP4 PUSH2 0x714 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x182 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x64D JUMPI PUSH1 0x3 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x3 SSTORE DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x634F3211E3A4E43FEE5A21AD9F87CA153B300FC78B1C557A2057DBE9C63BCB47 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1AB4E45D PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x182 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x182 JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE SWAP3 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x182 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x6C4 JUMPI STOP JUMPDEST PUSH4 0x73E64FD PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55B JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAPN 0xD3 EXTSTATICCALL PUSH24 0xC3AEC7103404EB222A5DFACC61227AE83AE882B993C36120 0xB8 0x2A 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "1034:3731:8:-:0;;;;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6254:10:3;598:22:1;1034:3731:8;;-1:-1:-1;1034:3731:8;;-1:-1:-1;;;;;;1034:3731:8;6254:10:3;1034:3731:8;;;6276:29:3;;6272:70;;6347:57;1034:3731:8;;-1:-1:-1;;;;;;1034:3731:8;;;;;;;2433:15;2416:32;1034:3731;;2502:27;2539:21;;1034:3731;2570:20;1034:3731;2600:33;2643:37;;-1:-1:-1;1034:3731:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2539:21;1034:3731;;;;;2643:37;1034:3731;;;;;;6272:70:3;6322:13;;;-1:-1:-1;6322:13:3;;-1:-1:-1;6322:13:3;1034:3731:8;;;-1:-1:-1;;;1034:3731:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1034:3731:8;;;;;;-1:-1:-1;1034:3731:8;;;;;-1:-1:-1;1034:3731:8"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "external_fun_getEntranceFee": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "finalize_allocation": {
                                "entryPoint": 1812,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            }
                        },
                        "generatedSources": [],
                        "immutableReferences": {
                            "553": [
                                {
                                    "length": 32,
                                    "start": 1424
                                },
                                {
                                    "length": 32,
                                    "start": 1777
                                }
                            ],
                            "555": [
                                {
                                    "length": 32,
                                    "start": 1040
                                }
                            ],
                            "557": [
                                {
                                    "length": 32,
                                    "start": 1078
                                }
                            ],
                            "559": [
                                {
                                    "length": 32,
                                    "start": 893
                                }
                            ],
                            "561": [
                                {
                                    "length": 32,
                                    "start": 1137
                                }
                            ]
                        },
                        "linkReferences": {},
                        "object": "60806040526004361015610011575f80fd5b5f3560e01c806309bc33a7146106da5780631fe543e31461065c5780632cfcc539146105835780635d495aea1461035f57806379ba5097146102b45780638c5f83ee146102af5780638da5cb5b146102885780638ea98117146101ae5780639eccacf6146101865763f2fde38b14610087575f80fd5b34610182576020366003190112610182576004356001600160a01b03811690819003610182575f546001600160a01b031633819003610144573382146100ff57600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b5f80fd5b34610182575f366003190112610182576002546040516001600160a01b039091168152602090f35b34610182576020366003190112610182576004356001600160a01b03811690819003610182575f546001600160a01b03163381141580610273575b6102495750801561023a576020817fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b63d92e233d60e01b5f5260045ffd5b60025463061db9c160e01b5f908152336004526024929092526001600160a01b0316604452606490fd5b506002546001600160a01b03163314156101e9565b34610182575f366003190112610182575f546040516001600160a01b039091168152602090f35b6106da565b34610182575f366003190112610182576001546001600160a01b0381163303610321575f80546001600160a01b031980821633908117845593166001556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b34610182575f36600319011261018257600454420342811161056f577f000000000000000000000000000000000000000000000000000000000000000011610182576040516020810181811067ffffffffffffffff82111761055b576040525f81526040519063125fa26760e31b60208301525115156024820152602481526103e9604482610714565b60405160c081019080821067ffffffffffffffff83111761055b5761ffff926020926040527f000000000000000000000000000000000000000000000000000000000000000082528282017f000000000000000000000000000000000000000000000000000000000000000081525f61010460408501946003865286606082019563ffffffff7f000000000000000000000000000000000000000000000000000000000000000016875263ffffffff608084016001815260a085019283528160018060a01b0360025416996040519d8e9c8d9b8c99634d8e1c2f60e11b8b528960048c01525160248b01525160448a01525116606488015251166084860152511660a48401525160c060c484015280519182918260e4860152018484015e8181018301849052601f01601f191681010301925af180156105505761052957005b602090813d8311610549575b61053f8183610714565b8101031261018257005b503d610535565b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f366003190112610182577f000000000000000000000000000000000000000000000000000000000000000034101561064d576003546801000000000000000081101561055b576001810180600355811015610639577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01336bffffffffffffffffffffffff60a01b825416179055337f634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb475f80a2005b634e487b7160e01b5f52603260045260245ffd5b631ab4e45d60e11b5f5260045ffd5b346101825760403660031901126101825760243567ffffffffffffffff811161018257366023820112156101825780600401359067ffffffffffffffff821161018257602490369260051b010111610182576002546001600160a01b0316338190036106c457005b63073e64fd60e21b5f523360045260245260445ffd5b34610182575f3660031901126101825760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b90601f8019910116810190811067ffffffffffffffff82111761055b5760405256fea2646970667358221220b5e7d3fb77c3aec7103404eb222a5dfacc61227ae83ae882b993c36120b82ab164736f6c634300081e0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x5D495AEA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8C5F83EE EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x186 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x144 JUMPI CALLER DUP3 EQ PUSH2 0xFF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x273 JUMPI JUMPDEST PUSH2 0x249 JUMPI POP DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x6DA JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x321 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE SWAP4 AND PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x4 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x56F JUMPI PUSH32 0x0 GT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55B JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x3E9 PUSH1 0x44 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x55B JUMPI PUSH2 0xFFFF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x40 MSTORE PUSH32 0x0 DUP3 MSTORE DUP3 DUP3 ADD PUSH32 0x0 DUP2 MSTORE PUSH0 PUSH2 0x104 PUSH1 0x40 DUP6 ADD SWAP5 PUSH1 0x3 DUP7 MSTORE DUP7 PUSH1 0x60 DUP3 ADD SWAP6 PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x80 DUP5 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP10 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP12 MSTORE DUP10 PUSH1 0x4 DUP13 ADD MSTORE MLOAD PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD AND PUSH1 0x84 DUP7 ADD MSTORE MLOAD AND PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0xC4 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xE4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x550 JUMPI PUSH2 0x529 JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x549 JUMPI JUMPDEST PUSH2 0x53F DUP2 DUP4 PUSH2 0x714 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x182 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x64D JUMPI PUSH1 0x3 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x3 SSTORE DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x634F3211E3A4E43FEE5A21AD9F87CA153B300FC78B1C557A2057DBE9C63BCB47 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1AB4E45D PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x182 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x182 JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE SWAP3 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x182 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x6C4 JUMPI STOP JUMPDEST PUSH4 0x73E64FD PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55B JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAPN 0xD3 EXTSTATICCALL PUSH24 0xC3AEC7103404EB222A5DFACC61227AE83AE882B993C36120 0xB8 0x2A 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
                        "sourceMap": "1034:3731:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;-1:-1:-1;;;;;1034:3731:8;1918:10:1;:21;;;1034:3731:8;;1918:10:1;1649:16;;1034:3731:8;;1700:19:1;1034:3731:8;;-1:-1:-1;;;;;;1034:3731:8;;;;;1731:39:1;-1:-1:-1;;1731:39:1;1034:3731:8;;;;-1:-1:-1;;;1034:3731:8;;;;;;;;;;;1597:1;1034:3731;1597:1;;;1034:3731;;;;;;;-1:-1:-1;;;1034:3731:8;;;;;;;;;;;1597:1;-1:-1:-1;;;1597:1:8;;;1034:3731;;;;;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;6077:45:3;1034:3731:8;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;-1:-1:-1;;;;;1034:3731:8;8155:10:3;:21;;;;:64;;1034:3731:8;8151:162:3;;7931:29;;;7927:70;;1034:3731:8;;8071:31:3;1034:3731:8;;;;8002:57:3;1034:3731:8;;;8002:57:3;1034:3731:8;;;;;;8071:31:3;1034:3731:8;7927:70:3;7977:13;;;1034:3731:8;7977:13:3;1034:3731:8;;7977:13:3;8151:162;8288:16;1034:3731:8;-1:-1:-1;;;1034:3731:8;8236:70:3;;;8155:10;1034:3731:8;;;;;;;-1:-1:-1;;;;;1034:3731:8;;;;;8236:70:3;8155:64;-1:-1:-1;8202:16:3;1034:3731:8;-1:-1:-1;;;;;1034:3731:8;8155:10:3;8180:39;;8155:64;;1034:3731:8;;;;;;-1:-1:-1;;1034:3731:8;;;;;;;;-1:-1:-1;;;;;1034:3731:8;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1034:3731:8;;;;1150:14:1;1034:3731:8;-1:-1:-1;;;;;1034:3731:8;;1136:10:1;:28;1034:3731:8;;;;;-1:-1:-1;;;;;;1034:3731:8;;;1136:10:1;1034:3731:8;;;;;;;-1:-1:-1;1034:3731:8;-1:-1:-1;;;;;1034:3731:8;;1295:42:1;;1034:3731:8;1295:42:1;1034:3731:8;;;;-1:-1:-1;;;1034:3731:8;;;;;;;;;;;1597:1;-1:-1:-1;;;1597:1:8;;;1034:3731;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;;;3706:15;1034:3731;3706:15;1034:3731;;;;3742:10;-1:-1:-1;3701:92:8;;1034:3731;;1597:1;;;;;;;;;;;;1034:3731;1597:1;1034:3731;1597:1;;1034:3731;;;;;;1597:1;583:52:7;;;204:36;1597:1:8;;583:52:7;;;204:36;583:52;;;;;;;:::i;:::-;1034:3731:8;;1597:1;;;;;;;;;;;;;1034:3731;1597:1;;;1034:3731;1597:1;3913:9;1597:1;;3855:493;;;3943:16;1597:1;;1034:3731;1597:1;1034:3731;3855:493;;1597:1;1555;1597;;3855:493;;;;4049:18;1555:1;4049:18;1555:1;1597;;1555;3855:493;;;1597:1;;;3855:493;;;1597:1;;;1034:3731;;;;;;4378:16;1034:3731;;;;;1597:1;;;;;;;;;;4378:44;;;1034:3731;4378:44;;1597:1;;583:52:7;1597:1:8;;1034:3731;1597:1;583:52:7;1597:1:8;;1034:3731;1597:1;1034:3731;1597:1;;;;;1555;1597;;;;;1555;1597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1597:1:8;;;4378:44;;;;;;;;;;;1034:3731;4378:44;1597:1;4378:44;;;;;;;;;;;;:::i;:::-;;;1597:1;;;;1034:3731;4378:44;;;;;;1034:3731;;1597:1;1034:3731;1597:1;;;;;;1034:3731;;;;;;;;583:52:7;1034:3731:8;;;;;;;;;;;;;;;;;-1:-1:-1;;1034:3731:8;;;;3200:13;3187:9;:26;;3183:91;;3283:8;1034:3731;;;;;;;;;;;3283:8;1034:3731;;;;;;;;3305:10;1034:3731;;;;;;;;;3305:10;3371:25;1034:3731;3371:25;;1034:3731;;;;;;;;;;;;;3183:91;3236:21;;;1034:3731;3236:21;1034:3731;;3236:21;1034:3731;;;;;;-1:-1:-1;;1034:3731:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7612:16:3;1034:3731:8;-1:-1:-1;;;;;1034:3731:8;7590:10:3;:39;;;7586:131;;1034:3731:8;7586:131:3;7646:64;;;1034:3731:8;7646:64:3;7590:10;1034:3731:8;;;;;;7646:64:3;1034:3731:8;;;;;;-1:-1:-1;;1034:3731:8;;;;;;;4743:13;1034:3731;;;1597:1;;;;;;;;;;;;;;;;;;;;;:::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "380000",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "I_ENTRANCEFEE()": "infinite",
                            "acceptOwnership()": "50236",
                            "enterRaffle()": "infinite",
                            "getEntranceFee()": "infinite",
                            "owner()": "2403",
                            "pickWinner()": "infinite",
                            "rawFulfillRandomWords(uint256,uint256[])": "2457",
                            "s_vrfCoordinator()": "2448",
                            "setCoordinator(address)": "29913",
                            "transferOwnership(address)": "28278"
                        },
                        "internal": {
                            "fulfillRandomWords(uint256,uint256[] calldata)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "I_ENTRANCEFEE()": "8c5f83ee",
                        "acceptOwnership()": "79ba5097",
                        "enterRaffle()": "2cfcc539",
                        "getEntranceFee()": "09bc33a7",
                        "owner()": "8da5cb5b",
                        "pickWinner()": "5d495aea",
                        "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
                        "s_vrfCoordinator()": "9eccacf6",
                        "setCoordinator(address)": "8ea98117",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"gaselane\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"SubscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughEthEntered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEntered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"I_ENTRANCEFEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mir Mohmmad Luqman\",\"details\":\"Implements Chainlink VRFv2.5\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RAFFLE_LOTTERY\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"This contract is created for sample raffle lottery.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x2162cebe5cef8115326c8ca9f37a864d9ac27d8fa89e27a8842ca108a2d38b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://814a3f6634092d7f10f0380f0ac0fbbec75e24164e7339e124ff6f5d78bd52e7\",\"dweb:/ipfs/QmUyGeD57zC8rrPWqngFZKyFruf7sRRDMbtrEt6SX9rNED\"]},\"c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol\":{\"keccak256\":\"0xfcd0032c5ce572160f086a5beac59aca93e18b5124f43f9e91c20bcd26f113ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80f2f880a4823e4d8ec52888fec2d427da81265c59ac92c12a4d4e906488c291\",\"dweb:/ipfs/QmQdagkQgVeKK1bNmXtqgMzMik7q3x8mA8qkg4pK65kRvN\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 29,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:Raffle",
                            "label": "s_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 31,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:Raffle",
                            "label": "s_pendingOwner",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        },
                        {
                            "astId": 231,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:Raffle",
                            "label": "s_vrfCoordinator",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_contract(IVRFCoordinatorV2Plus)380"
                        },
                        {
                            "astId": 549,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:Raffle",
                            "label": "sPlayers",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_array(t_address_payable)dyn_storage"
                        },
                        {
                            "astId": 551,
                            "contract": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:Raffle",
                            "label": "sLastTimeStamp",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_address_payable": {
                            "encoding": "inplace",
                            "label": "address payable",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_address_payable)dyn_storage": {
                            "base": "t_address_payable",
                            "encoding": "dynamic_array",
                            "label": "address payable[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(IVRFCoordinatorV2Plus)380": {
                            "encoding": "inplace",
                            "label": "contract IVRFCoordinatorV2Plus",
                            "numberOfBytes": "20"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "acceptOwnership()": {
                            "notice": "Allows an ownership transfer to be completed by the recipient."
                        },
                        "owner()": {
                            "notice": "Get the current owner"
                        },
                        "setCoordinator(address)": {
                            "notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
                        },
                        "transferOwnership(address)": {
                            "notice": "Allows an owner to begin transferring ownership to a new address."
                        }
                    },
                    "notice": "This contract is created for sample raffle lottery.",
                    "version": 1
                }
            }
        }
    },
    "errors": [
        {
            "component": "general",
            "errorCode": "2072",
            "formattedMessage": "Warning: Unused local variable.\n  --> c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol:90:9:\n   |\n90 |         uint256 requestId = s_vrfCoordinator.requestRandomWords(request);\n   |         ^^^^^^^^^^^^^^^^^\n\n",
            "message": "Unused local variable.",
            "severity": "warning",
            "sourceLocation": {
                "end": 4375,
                "file": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol",
                "start": 4358
            },
            "type": "Warning"
        }
    ],
    "sources": {
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
                "exportedSymbols": {
                    "ConfirmedOwner": [
                        20
                    ],
                    "ConfirmedOwnerWithProposal": [
                        183
                    ]
                },
                "id": 21,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:0"
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
                        "file": "./ConfirmedOwnerWithProposal.sol",
                        "id": 3,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 21,
                        "sourceUnit": 184,
                        "src": "57:76:0",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 2,
                                    "name": "ConfirmedOwnerWithProposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 183,
                                    "src": "65:26:0",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 5,
                                    "name": "ConfirmedOwnerWithProposal",
                                    "nameLocations": [
                                        "267:26:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 183,
                                    "src": "267:26:0"
                                },
                                "id": 6,
                                "nodeType": "InheritanceSpecifier",
                                "src": "267:26:0"
                            }
                        ],
                        "canonicalName": "ConfirmedOwner",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 4,
                            "nodeType": "StructuredDocumentation",
                            "src": "135:105:0",
                            "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
                        },
                        "fullyImplemented": true,
                        "id": 20,
                        "linearizedBaseContracts": [
                            20,
                            183,
                            199
                        ],
                        "name": "ConfirmedOwner",
                        "nameLocation": "249:14:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 18,
                                    "nodeType": "Block",
                                    "src": "377:2:0",
                                    "statements": []
                                },
                                "id": 19,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "id": 11,
                                                "name": "newOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8,
                                                "src": "355:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "30",
                                                        "id": 14,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "373:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 13,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "365:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 12,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "365:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 15,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "365:10:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 16,
                                        "kind": "baseConstructorSpecifier",
                                        "modifierName": {
                                            "id": 10,
                                            "name": "ConfirmedOwnerWithProposal",
                                            "nameLocations": [
                                                "328:26:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 183,
                                            "src": "328:26:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "328:48:0"
                                    }
                                ],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 9,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 8,
                                            "mutability": "mutable",
                                            "name": "newOwner",
                                            "nameLocation": "318:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 19,
                                            "src": "310:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 7,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "310:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "309:18:0"
                                },
                                "returnParameters": {
                                    "id": 17,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "377:0:0"
                                },
                                "scope": 20,
                                "src": "298:81:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 21,
                        "src": "240:141:0",
                        "usedErrors": [],
                        "usedEvents": [
                            37,
                            43
                        ]
                    }
                ],
                "src": "32:350:0"
            },
            "id": 0
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
                "exportedSymbols": {
                    "ConfirmedOwnerWithProposal": [
                        183
                    ],
                    "IOwnable": [
                        199
                    ]
                },
                "id": 184,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 22,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:1"
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
                        "file": "../interfaces/IOwnable.sol",
                        "id": 24,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 184,
                        "sourceUnit": 200,
                        "src": "57:52:1",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 23,
                                    "name": "IOwnable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 199,
                                    "src": "65:8:1",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 26,
                                    "name": "IOwnable",
                                    "nameLocations": [
                                        "255:8:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 199,
                                    "src": "255:8:1"
                                },
                                "id": 27,
                                "nodeType": "InheritanceSpecifier",
                                "src": "255:8:1"
                            }
                        ],
                        "canonicalName": "ConfirmedOwnerWithProposal",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 25,
                            "nodeType": "StructuredDocumentation",
                            "src": "111:105:1",
                            "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
                        },
                        "fullyImplemented": true,
                        "id": 183,
                        "linearizedBaseContracts": [
                            183,
                            199
                        ],
                        "name": "ConfirmedOwnerWithProposal",
                        "nameLocation": "225:26:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 29,
                                "mutability": "mutable",
                                "name": "s_owner",
                                "nameLocation": "284:7:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 183,
                                "src": "268:23:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 28,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "268:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 31,
                                "mutability": "mutable",
                                "name": "s_pendingOwner",
                                "nameLocation": "311:14:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 183,
                                "src": "295:30:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 30,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "295:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "anonymous": false,
                                "eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
                                "id": 37,
                                "name": "OwnershipTransferRequested",
                                "nameLocation": "336:26:1",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 36,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 33,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nameLocation": "379:4:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 37,
                                            "src": "363:20:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 32,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "363:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 35,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nameLocation": "401:2:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 37,
                                            "src": "385:18:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 34,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "385:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "362:42:1"
                                },
                                "src": "330:75:1"
                            },
                            {
                                "anonymous": false,
                                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                                "id": 43,
                                "name": "OwnershipTransferred",
                                "nameLocation": "414:20:1",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 42,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 39,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nameLocation": "451:4:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 43,
                                            "src": "435:20:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 38,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "435:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 41,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nameLocation": "473:2:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 43,
                                            "src": "457:18:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 40,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "457:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "434:42:1"
                                },
                                "src": "408:69:1"
                            },
                            {
                                "body": {
                                    "id": 76,
                                    "nodeType": "Block",
                                    "src": "533:230:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 56,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 51,
                                                            "name": "newOwner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 45,
                                                            "src": "598:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 54,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "618:1:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 53,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "610:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 52,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "610:7:1",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 55,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "610:10:1",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "598:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
                                                        "id": 57,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "622:26:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                                                            "typeString": "literal_string \"Cannot set owner to zero\""
                                                        },
                                                        "value": "Cannot set owner to zero"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                                                            "typeString": "literal_string \"Cannot set owner to zero\""
                                                        }
                                                    ],
                                                    "id": 50,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "590:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 58,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "590:59:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 59,
                                            "nodeType": "ExpressionStatement",
                                            "src": "590:59:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 60,
                                                    "name": "s_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 29,
                                                    "src": "656:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 61,
                                                    "name": "newOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 45,
                                                    "src": "666:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "656:18:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 63,
                                            "nodeType": "ExpressionStatement",
                                            "src": "656:18:1"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 69,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 64,
                                                    "name": "pendingOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 47,
                                                    "src": "684:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 67,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "708:1:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 66,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "700:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 65,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "700:7:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 68,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "700:10:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "684:26:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 75,
                                            "nodeType": "IfStatement",
                                            "src": "680:79:1",
                                            "trueBody": {
                                                "id": 74,
                                                "nodeType": "Block",
                                                "src": "712:47:1",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 71,
                                                                    "name": "pendingOwner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 47,
                                                                    "src": "739:12:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 70,
                                                                "name": "_transferOwnership",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 161,
                                                                "src": "720:18:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                                    "typeString": "function (address)"
                                                                }
                                                            },
                                                            "id": 72,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "720:32:1",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 73,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "720:32:1"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 77,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 48,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 45,
                                            "mutability": "mutable",
                                            "name": "newOwner",
                                            "nameLocation": "501:8:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 77,
                                            "src": "493:16:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 44,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "493:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 47,
                                            "mutability": "mutable",
                                            "name": "pendingOwner",
                                            "nameLocation": "519:12:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 77,
                                            "src": "511:20:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 46,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "511:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "492:40:1"
                                },
                                "returnParameters": {
                                    "id": 49,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "533:0:1"
                                },
                                "scope": 183,
                                "src": "481:282:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    195
                                ],
                                "body": {
                                    "id": 90,
                                    "nodeType": "Block",
                                    "src": "912:33:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 87,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 80,
                                                        "src": "937:2:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 86,
                                                    "name": "_transferOwnership",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 161,
                                                    "src": "918:18:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 88,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "918:22:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 89,
                                            "nodeType": "ExpressionStatement",
                                            "src": "918:22:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 78,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "767:77:1",
                                    "text": "@notice Allows an owner to begin transferring ownership to a new address."
                                },
                                "functionSelector": "f2fde38b",
                                "id": 91,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 84,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 83,
                                            "name": "onlyOwner",
                                            "nameLocations": [
                                                "902:9:1"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 182,
                                            "src": "902:9:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "902:9:1"
                                    }
                                ],
                                "name": "transferOwnership",
                                "nameLocation": "856:17:1",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 82,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "893:8:1"
                                },
                                "parameters": {
                                    "id": 81,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 80,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nameLocation": "882:2:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 91,
                                            "src": "874:10:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 79,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "874:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "873:12:1"
                                },
                                "returnParameters": {
                                    "id": 85,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "912:0:1"
                                },
                                "scope": 183,
                                "src": "847:98:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    198
                                ],
                                "body": {
                                    "id": 126,
                                    "nodeType": "Block",
                                    "src": "1071:271:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 100,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 97,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1136:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 98,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1140:6:1",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1136:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 99,
                                                            "name": "s_pendingOwner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 31,
                                                            "src": "1150:14:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1136:28:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4d7573742062652070726f706f736564206f776e6572",
                                                        "id": 101,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1166:24:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                                            "typeString": "literal_string \"Must be proposed owner\""
                                                        },
                                                        "value": "Must be proposed owner"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                                            "typeString": "literal_string \"Must be proposed owner\""
                                                        }
                                                    ],
                                                    "id": 96,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1128:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 102,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1128:63:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 103,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1128:63:1"
                                        },
                                        {
                                            "assignments": [
                                                105
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 105,
                                                    "mutability": "mutable",
                                                    "name": "oldOwner",
                                                    "nameLocation": "1206:8:1",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 126,
                                                    "src": "1198:16:1",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 104,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1198:7:1",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 107,
                                            "initialValue": {
                                                "id": 106,
                                                "name": "s_owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "1217:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1198:26:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 111,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 108,
                                                    "name": "s_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 29,
                                                    "src": "1230:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 109,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1240:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 110,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1244:6:1",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1240:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1230:20:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 112,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1230:20:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 118,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 113,
                                                    "name": "s_pendingOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 31,
                                                    "src": "1256:14:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 116,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1281:1:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 115,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1273:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 114,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1273:7:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 117,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1273:10:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1256:27:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 119,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1256:27:1"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 121,
                                                        "name": "oldOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 105,
                                                        "src": "1316:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 122,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1326:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 123,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1330:6:1",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1326:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 120,
                                                    "name": "OwnershipTransferred",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 43,
                                                    "src": "1295:20:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 124,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1295:42:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 125,
                                            "nodeType": "EmitStatement",
                                            "src": "1290:47:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 92,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "949:74:1",
                                    "text": "@notice Allows an ownership transfer to be completed by the recipient."
                                },
                                "functionSelector": "79ba5097",
                                "id": 127,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "acceptOwnership",
                                "nameLocation": "1035:15:1",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 94,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1062:8:1"
                                },
                                "parameters": {
                                    "id": 93,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1050:2:1"
                                },
                                "returnParameters": {
                                    "id": 95,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1071:0:1"
                                },
                                "scope": 183,
                                "src": "1026:316:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    190
                                ],
                                "body": {
                                    "id": 136,
                                    "nodeType": "Block",
                                    "src": "1438:25:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 134,
                                                "name": "s_owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "1451:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 133,
                                            "id": 135,
                                            "nodeType": "Return",
                                            "src": "1444:14:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 128,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1346:33:1",
                                    "text": "@notice Get the current owner"
                                },
                                "functionSelector": "8da5cb5b",
                                "id": 137,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "owner",
                                "nameLocation": "1391:5:1",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 130,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1411:8:1"
                                },
                                "parameters": {
                                    "id": 129,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1396:2:1"
                                },
                                "returnParameters": {
                                    "id": 133,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 132,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 137,
                                            "src": "1429:7:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 131,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1429:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1428:9:1"
                                },
                                "scope": 183,
                                "src": "1382:81:1",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 160,
                                    "nodeType": "Block",
                                    "src": "1584:191:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 147,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 144,
                                                            "name": "to",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 140,
                                                            "src": "1649:2:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 145,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1655:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 146,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1659:6:1",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1655:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1649:16:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
                                                        "id": 148,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1667:25:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                                            "typeString": "literal_string \"Cannot transfer to self\""
                                                        },
                                                        "value": "Cannot transfer to self"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                                            "typeString": "literal_string \"Cannot transfer to self\""
                                                        }
                                                    ],
                                                    "id": 143,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1641:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 149,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1641:52:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 150,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1641:52:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 153,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 151,
                                                    "name": "s_pendingOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 31,
                                                    "src": "1700:14:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 152,
                                                    "name": "to",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 140,
                                                    "src": "1717:2:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1700:19:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 154,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1700:19:1"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 156,
                                                        "name": "s_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 29,
                                                        "src": "1758:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 157,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 140,
                                                        "src": "1767:2:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 155,
                                                    "name": "OwnershipTransferRequested",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 37,
                                                    "src": "1731:26:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 158,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1731:39:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 159,
                                            "nodeType": "EmitStatement",
                                            "src": "1726:44:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 138,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1467:66:1",
                                    "text": "@notice validate, transfer ownership, and emit relevant events"
                                },
                                "id": 161,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transferOwnership",
                                "nameLocation": "1545:18:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 141,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 140,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nameLocation": "1572:2:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 161,
                                            "src": "1564:10:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 139,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1564:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1563:12:1"
                                },
                                "returnParameters": {
                                    "id": 142,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1584:0:1"
                                },
                                "scope": 183,
                                "src": "1536:239:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 173,
                                    "nodeType": "Block",
                                    "src": "1853:118:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 169,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 166,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1918:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 167,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1922:6:1",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1918:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 168,
                                                            "name": "s_owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 29,
                                                            "src": "1932:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1918:21:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                                                        "id": 170,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1941:24:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                                            "typeString": "literal_string \"Only callable by owner\""
                                                        },
                                                        "value": "Only callable by owner"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                                            "typeString": "literal_string \"Only callable by owner\""
                                                        }
                                                    ],
                                                    "id": 165,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1910:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 171,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1910:56:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 172,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1910:56:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 162,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1779:27:1",
                                    "text": "@notice validate access"
                                },
                                "id": 174,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_validateOwnership",
                                "nameLocation": "1818:18:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 163,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1836:2:1"
                                },
                                "returnParameters": {
                                    "id": 164,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1853:0:1"
                                },
                                "scope": 183,
                                "src": "1809:162:1",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 181,
                                    "nodeType": "Block",
                                    "src": "2069:38:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 177,
                                                    "name": "_validateOwnership",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 174,
                                                    "src": "2075:18:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                                        "typeString": "function () view"
                                                    }
                                                },
                                                "id": 178,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2075:20:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 179,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2075:20:1"
                                        },
                                        {
                                            "id": 180,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "2101:1:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 175,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1975:70:1",
                                    "text": "@notice Reverts if called by anyone other than the contract owner."
                                },
                                "id": 182,
                                "name": "onlyOwner",
                                "nameLocation": "2057:9:1",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 176,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2066:2:1"
                                },
                                "src": "2048:59:1",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 184,
                        "src": "216:1893:1",
                        "usedErrors": [],
                        "usedEvents": [
                            37,
                            43
                        ]
                    }
                ],
                "src": "32:2078:1"
            },
            "id": 1
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
                "exportedSymbols": {
                    "IOwnable": [
                        199
                    ]
                },
                "id": 200,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 185,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:2"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IOwnable",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "fullyImplemented": false,
                        "id": 199,
                        "linearizedBaseContracts": [
                            199
                        ],
                        "name": "IOwnable",
                        "nameLocation": "67:8:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "8da5cb5b",
                                "id": 190,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "owner",
                                "nameLocation": "89:5:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 186,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "94:2:2"
                                },
                                "returnParameters": {
                                    "id": 189,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 188,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 190,
                                            "src": "115:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 187,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "115:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "114:9:2"
                                },
                                "scope": 199,
                                "src": "80:44:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "f2fde38b",
                                "id": 195,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferOwnership",
                                "nameLocation": "137:17:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 193,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 192,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nameLocation": "163:9:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 195,
                                            "src": "155:17:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 191,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "155:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "154:19:2"
                                },
                                "returnParameters": {
                                    "id": 194,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "182:0:2"
                                },
                                "scope": 199,
                                "src": "128:55:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "79ba5097",
                                "id": 198,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "acceptOwnership",
                                "nameLocation": "196:15:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 196,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "211:2:2"
                                },
                                "returnParameters": {
                                    "id": 197,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "222:0:2"
                                },
                                "scope": 199,
                                "src": "187:36:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 200,
                        "src": "57:168:2",
                        "usedErrors": [],
                        "usedEvents": []
                    }
                ],
                "src": "32:194:2"
            },
            "id": 2
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
                "exportedSymbols": {
                    "ConfirmedOwner": [
                        20
                    ],
                    "IVRFCoordinatorV2Plus": [
                        380
                    ],
                    "IVRFMigratableConsumerV2Plus": [
                        394
                    ],
                    "VRFConsumerBaseV2Plus": [
                        362
                    ]
                },
                "id": 363,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 201,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".4"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:3"
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
                        "file": "./interfaces/IVRFCoordinatorV2Plus.sol",
                        "id": 203,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 363,
                        "sourceUnit": 381,
                        "src": "57:77:3",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 202,
                                    "name": "IVRFCoordinatorV2Plus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "65:21:3",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
                        "file": "./interfaces/IVRFMigratableConsumerV2Plus.sol",
                        "id": 205,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 363,
                        "sourceUnit": 395,
                        "src": "135:91:3",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 204,
                                    "name": "IVRFMigratableConsumerV2Plus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 394,
                                    "src": "143:28:3",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
                        "file": "../../shared/access/ConfirmedOwner.sol",
                        "id": 207,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 363,
                        "sourceUnit": 21,
                        "src": "227:70:3",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 206,
                                    "name": "ConfirmedOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20,
                                    "src": "235:14:3",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 209,
                                    "name": "IVRFMigratableConsumerV2Plus",
                                    "nameLocations": [
                                        "5712:28:3"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 394,
                                    "src": "5712:28:3"
                                },
                                "id": 210,
                                "nodeType": "InheritanceSpecifier",
                                "src": "5712:28:3"
                            },
                            {
                                "baseName": {
                                    "id": 211,
                                    "name": "ConfirmedOwner",
                                    "nameLocations": [
                                        "5742:14:3"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 20,
                                    "src": "5742:14:3"
                                },
                                "id": 212,
                                "nodeType": "InheritanceSpecifier",
                                "src": "5742:14:3"
                            }
                        ],
                        "canonicalName": "VRFConsumerBaseV2Plus",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 208,
                            "nodeType": "StructuredDocumentation",
                            "src": "299:5369:3",
                            "text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
                        },
                        "fullyImplemented": false,
                        "id": 362,
                        "linearizedBaseContracts": [
                            362,
                            20,
                            183,
                            199,
                            394
                        ],
                        "name": "VRFConsumerBaseV2Plus",
                        "nameLocation": "5687:21:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "errorSelector": "1cf993f4",
                                "id": 218,
                                "name": "OnlyCoordinatorCanFulfill",
                                "nameLocation": "5767:25:3",
                                "nodeType": "ErrorDefinition",
                                "parameters": {
                                    "id": 217,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 214,
                                            "mutability": "mutable",
                                            "name": "have",
                                            "nameLocation": "5801:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 218,
                                            "src": "5793:12:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 213,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5793:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 216,
                                            "mutability": "mutable",
                                            "name": "want",
                                            "nameLocation": "5815:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 218,
                                            "src": "5807:12:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 215,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5807:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5792:28:3"
                                },
                                "src": "5761:60:3"
                            },
                            {
                                "errorSelector": "061db9c1",
                                "id": 226,
                                "name": "OnlyOwnerOrCoordinator",
                                "nameLocation": "5830:22:3",
                                "nodeType": "ErrorDefinition",
                                "parameters": {
                                    "id": 225,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 220,
                                            "mutability": "mutable",
                                            "name": "have",
                                            "nameLocation": "5861:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 226,
                                            "src": "5853:12:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 219,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5853:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 222,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nameLocation": "5875:5:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 226,
                                            "src": "5867:13:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 221,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5867:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 224,
                                            "mutability": "mutable",
                                            "name": "coordinator",
                                            "nameLocation": "5890:11:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 226,
                                            "src": "5882:19:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 223,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5882:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5852:50:3"
                                },
                                "src": "5824:79:3"
                            },
                            {
                                "errorSelector": "d92e233d",
                                "id": 228,
                                "name": "ZeroAddress",
                                "nameLocation": "5912:11:3",
                                "nodeType": "ErrorDefinition",
                                "parameters": {
                                    "id": 227,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5923:2:3"
                                },
                                "src": "5906:20:3"
                            },
                            {
                                "constant": false,
                                "functionSelector": "9eccacf6",
                                "id": 231,
                                "mutability": "mutable",
                                "name": "s_vrfCoordinator",
                                "nameLocation": "6106:16:3",
                                "nodeType": "VariableDeclaration",
                                "scope": 362,
                                "src": "6077:45:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                },
                                "typeName": {
                                    "id": 230,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                        "id": 229,
                                        "name": "IVRFCoordinatorV2Plus",
                                        "nameLocations": [
                                            "6077:21:3"
                                        ],
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 380,
                                        "src": "6077:21:3"
                                    },
                                    "referencedDeclaration": 380,
                                    "src": "6077:21:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                        "typeString": "contract IVRFCoordinatorV2Plus"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 258,
                                    "nodeType": "Block",
                                    "src": "6266:143:3",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 246,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 241,
                                                    "name": "_vrfCoordinator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 234,
                                                    "src": "6276:15:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 244,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6303:1:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 243,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "6295:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 242,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "6295:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 245,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6295:10:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "6276:29:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 251,
                                            "nodeType": "IfStatement",
                                            "src": "6272:70:3",
                                            "trueBody": {
                                                "id": 250,
                                                "nodeType": "Block",
                                                "src": "6307:35:3",
                                                "statements": [
                                                    {
                                                        "errorCall": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 247,
                                                                "name": "ZeroAddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 228,
                                                                "src": "6322:11:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                                    "typeString": "function () pure returns (error)"
                                                                }
                                                            },
                                                            "id": 248,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "6322:13:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_error",
                                                                "typeString": "error"
                                                            }
                                                        },
                                                        "id": 249,
                                                        "nodeType": "RevertStatement",
                                                        "src": "6315:20:3"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "id": 256,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 252,
                                                    "name": "s_vrfCoordinator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 231,
                                                    "src": "6347:16:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                        "typeString": "contract IVRFCoordinatorV2Plus"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 254,
                                                            "name": "_vrfCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 234,
                                                            "src": "6388:15:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 253,
                                                        "name": "IVRFCoordinatorV2Plus",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 380,
                                                        "src": "6366:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$380_$",
                                                            "typeString": "type(contract IVRFCoordinatorV2Plus)"
                                                        }
                                                    },
                                                    "id": 255,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6366:38:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                        "typeString": "contract IVRFCoordinatorV2Plus"
                                                    }
                                                },
                                                "src": "6347:57:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                                }
                                            },
                                            "id": 257,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6347:57:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 232,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "6127:72:3",
                                    "text": " @param _vrfCoordinator address of VRFCoordinator contract"
                                },
                                "id": 259,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 237,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "6254:3:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 238,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "6258:6:3",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "6254:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 239,
                                        "kind": "baseConstructorSpecifier",
                                        "modifierName": {
                                            "id": 236,
                                            "name": "ConfirmedOwner",
                                            "nameLocations": [
                                                "6239:14:3"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 20,
                                            "src": "6239:14:3"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6239:26:3"
                                    }
                                ],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 235,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 234,
                                            "mutability": "mutable",
                                            "name": "_vrfCoordinator",
                                            "nameLocation": "6222:15:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 259,
                                            "src": "6214:23:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 233,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6214:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6213:25:3"
                                },
                                "returnParameters": {
                                    "id": 240,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6266:0:3"
                                },
                                "scope": 362,
                                "src": "6202:207:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "documentation": {
                                    "id": 260,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "6413:690:3",
                                    "text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
                                },
                                "id": 268,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "fulfillRandomWords",
                                "nameLocation": "7207:18:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 266,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 262,
                                            "mutability": "mutable",
                                            "name": "requestId",
                                            "nameLocation": "7234:9:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 268,
                                            "src": "7226:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 261,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7226:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 265,
                                            "mutability": "mutable",
                                            "name": "randomWords",
                                            "nameLocation": "7264:11:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 268,
                                            "src": "7245:30:3",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 263,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "7245:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 264,
                                                "nodeType": "ArrayTypeName",
                                                "src": "7245:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7225:51:3"
                                },
                                "returnParameters": {
                                    "id": 267,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "7293:0:3"
                                },
                                "scope": 362,
                                "src": "7198:96:3",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 299,
                                    "nodeType": "Block",
                                    "src": "7580:189:3",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 282,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 276,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "7590:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 277,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "7594:6:3",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7590:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 280,
                                                            "name": "s_vrfCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 231,
                                                            "src": "7612:16:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                            }
                                                        ],
                                                        "id": 279,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "7604:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 278,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "7604:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 281,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7604:25:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "7590:39:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 293,
                                            "nodeType": "IfStatement",
                                            "src": "7586:131:3",
                                            "trueBody": {
                                                "id": 292,
                                                "nodeType": "Block",
                                                "src": "7631:86:3",
                                                "statements": [
                                                    {
                                                        "errorCall": {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "id": 284,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967281,
                                                                        "src": "7672:3:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 285,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "7676:6:3",
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "7672:10:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 288,
                                                                            "name": "s_vrfCoordinator",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 231,
                                                                            "src": "7692:16:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                                            }
                                                                        ],
                                                                        "id": 287,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "7684:7:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_address_$",
                                                                            "typeString": "type(address)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 286,
                                                                            "name": "address",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "7684:7:3",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 289,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "7684:25:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 283,
                                                                "name": "OnlyCoordinatorCanFulfill",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 218,
                                                                "src": "7646:25:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
                                                                    "typeString": "function (address,address) pure returns (error)"
                                                                }
                                                            },
                                                            "id": 290,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7646:64:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_error",
                                                                "typeString": "error"
                                                            }
                                                        },
                                                        "id": 291,
                                                        "nodeType": "RevertStatement",
                                                        "src": "7639:71:3"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 295,
                                                        "name": "requestId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 270,
                                                        "src": "7741:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 296,
                                                        "name": "randomWords",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 273,
                                                        "src": "7752:11:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                            "typeString": "uint256[] calldata"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                            "typeString": "uint256[] calldata"
                                                        }
                                                    ],
                                                    "id": 294,
                                                    "name": "fulfillRandomWords",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 268,
                                                    "src": "7722:18:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                                                        "typeString": "function (uint256,uint256[] calldata)"
                                                    }
                                                },
                                                "id": 297,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7722:42:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 298,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7722:42:3"
                                        }
                                    ]
                                },
                                "functionSelector": "1fe543e3",
                                "id": 300,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "rawFulfillRandomWords",
                                "nameLocation": "7498:21:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 274,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 270,
                                            "mutability": "mutable",
                                            "name": "requestId",
                                            "nameLocation": "7528:9:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 300,
                                            "src": "7520:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 269,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7520:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 273,
                                            "mutability": "mutable",
                                            "name": "randomWords",
                                            "nameLocation": "7558:11:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 300,
                                            "src": "7539:30:3",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 271,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "7539:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 272,
                                                "nodeType": "ArrayTypeName",
                                                "src": "7539:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7519:51:3"
                                },
                                "returnParameters": {
                                    "id": 275,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "7580:0:3"
                                },
                                "scope": 362,
                                "src": "7489:280:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    393
                                ],
                                "body": {
                                    "id": 330,
                                    "nodeType": "Block",
                                    "src": "7921:186:3",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 314,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 309,
                                                    "name": "_vrfCoordinator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 303,
                                                    "src": "7931:15:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 312,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "7958:1:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 311,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "7950:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 310,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "7950:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 313,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7950:10:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "7931:29:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 319,
                                            "nodeType": "IfStatement",
                                            "src": "7927:70:3",
                                            "trueBody": {
                                                "id": 318,
                                                "nodeType": "Block",
                                                "src": "7962:35:3",
                                                "statements": [
                                                    {
                                                        "errorCall": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 315,
                                                                "name": "ZeroAddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 228,
                                                                "src": "7977:11:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                                    "typeString": "function () pure returns (error)"
                                                                }
                                                            },
                                                            "id": 316,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "7977:13:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_error",
                                                                "typeString": "error"
                                                            }
                                                        },
                                                        "id": 317,
                                                        "nodeType": "RevertStatement",
                                                        "src": "7970:20:3"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "id": 324,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 320,
                                                    "name": "s_vrfCoordinator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 231,
                                                    "src": "8002:16:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                        "typeString": "contract IVRFCoordinatorV2Plus"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 322,
                                                            "name": "_vrfCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 303,
                                                            "src": "8043:15:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 321,
                                                        "name": "IVRFCoordinatorV2Plus",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 380,
                                                        "src": "8021:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$380_$",
                                                            "typeString": "type(contract IVRFCoordinatorV2Plus)"
                                                        }
                                                    },
                                                    "id": 323,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8021:38:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                        "typeString": "contract IVRFCoordinatorV2Plus"
                                                    }
                                                },
                                                "src": "8002:57:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                                }
                                            },
                                            "id": 325,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8002:57:3"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 327,
                                                        "name": "_vrfCoordinator",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 303,
                                                        "src": "8086:15:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 326,
                                                    "name": "CoordinatorSet",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 387,
                                                    "src": "8071:14:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 328,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8071:31:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 329,
                                            "nodeType": "EmitStatement",
                                            "src": "8066:36:3"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 301,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "7773:55:3",
                                    "text": " @inheritdoc IVRFMigratableConsumerV2Plus"
                                },
                                "functionSelector": "8ea98117",
                                "id": 331,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 307,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 306,
                                            "name": "onlyOwnerOrCoordinator",
                                            "nameLocations": [
                                                "7898:22:3"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 361,
                                            "src": "7898:22:3"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "7898:22:3"
                                    }
                                ],
                                "name": "setCoordinator",
                                "nameLocation": "7840:14:3",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 305,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "7889:8:3"
                                },
                                "parameters": {
                                    "id": 304,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 303,
                                            "mutability": "mutable",
                                            "name": "_vrfCoordinator",
                                            "nameLocation": "7863:15:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 331,
                                            "src": "7855:23:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 302,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7855:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7854:25:3"
                                },
                                "returnParameters": {
                                    "id": 308,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "7921:0:3"
                                },
                                "scope": 362,
                                "src": "7831:276:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 360,
                                    "nodeType": "Block",
                                    "src": "8145:179:3",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 345,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 337,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 333,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "8155:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 334,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "8159:6:3",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "8155:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 335,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 137,
                                                            "src": "8169:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 336,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8169:7:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "8155:21:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 344,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 338,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "8180:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 339,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "8184:6:3",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "8180:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "id": 342,
                                                                "name": "s_vrfCoordinator",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 231,
                                                                "src": "8202:16:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                                                }
                                                            ],
                                                            "id": 341,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "8194:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 340,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "8194:7:3",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 343,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8194:25:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "8180:39:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "8155:64:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 358,
                                            "nodeType": "IfStatement",
                                            "src": "8151:162:3",
                                            "trueBody": {
                                                "id": 357,
                                                "nodeType": "Block",
                                                "src": "8221:92:3",
                                                "statements": [
                                                    {
                                                        "errorCall": {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "id": 347,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967281,
                                                                        "src": "8259:3:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 348,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "8263:6:3",
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "8259:10:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "id": 349,
                                                                        "name": "owner",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 137,
                                                                        "src": "8271:5:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                            "typeString": "function () view returns (address)"
                                                                        }
                                                                    },
                                                                    "id": 350,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "8271:7:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 353,
                                                                            "name": "s_vrfCoordinator",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 231,
                                                                            "src": "8288:16:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                                                "typeString": "contract IVRFCoordinatorV2Plus"
                                                                            }
                                                                        ],
                                                                        "id": 352,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "8280:7:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_address_$",
                                                                            "typeString": "type(address)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 351,
                                                                            "name": "address",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "8280:7:3",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 354,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "8280:25:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                ],
                                                                "id": 346,
                                                                "name": "OnlyOwnerOrCoordinator",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 226,
                                                                "src": "8236:22:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$_t_error_$",
                                                                    "typeString": "function (address,address,address) pure returns (error)"
                                                                }
                                                            },
                                                            "id": 355,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8236:70:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_error",
                                                                "typeString": "error"
                                                            }
                                                        },
                                                        "id": 356,
                                                        "nodeType": "RevertStatement",
                                                        "src": "8229:77:3"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "id": 359,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "8318:1:3"
                                        }
                                    ]
                                },
                                "id": 361,
                                "name": "onlyOwnerOrCoordinator",
                                "nameLocation": "8120:22:3",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 332,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "8142:2:3"
                                },
                                "src": "8111:213:3",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 363,
                        "src": "5669:2657:3",
                        "usedErrors": [
                            218,
                            226,
                            228
                        ],
                        "usedEvents": [
                            37,
                            43,
                            387
                        ]
                    }
                ],
                "src": "32:8295:3"
            },
            "id": 3
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
                "exportedSymbols": {
                    "IVRFCoordinatorV2Plus": [
                        380
                    ],
                    "IVRFSubscriptionV2Plus": [
                        483
                    ],
                    "VRFV2PlusClient": [
                        525
                    ]
                },
                "id": 381,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 364,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:4"
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
                        "file": "../libraries/VRFV2PlusClient.sol",
                        "id": 366,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 381,
                        "sourceUnit": 526,
                        "src": "57:65:4",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 365,
                                    "name": "VRFV2PlusClient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "65:15:4",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
                        "file": "./IVRFSubscriptionV2Plus.sol",
                        "id": 368,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 381,
                        "sourceUnit": 484,
                        "src": "123:68:4",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 367,
                                    "name": "IVRFSubscriptionV2Plus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 483,
                                    "src": "131:22:4",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 369,
                                    "name": "IVRFSubscriptionV2Plus",
                                    "nameLocations": [
                                        "398:22:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 483,
                                    "src": "398:22:4"
                                },
                                "id": 370,
                                "nodeType": "InheritanceSpecifier",
                                "src": "398:22:4"
                            }
                        ],
                        "canonicalName": "IVRFCoordinatorV2Plus",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "fullyImplemented": false,
                        "id": 380,
                        "linearizedBaseContracts": [
                            380,
                            483
                        ],
                        "name": "IVRFCoordinatorV2Plus",
                        "nameLocation": "373:21:4",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 371,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "425:1588:4",
                                    "text": " @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
                                },
                                "functionSelector": "9b1c385e",
                                "id": 379,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "requestRandomWords",
                                "nameLocation": "2025:18:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 375,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 374,
                                            "mutability": "mutable",
                                            "name": "req",
                                            "nameLocation": "2088:3:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 379,
                                            "src": "2044:47:4",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RandomWordsRequest_$509_calldata_ptr",
                                                "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                                            },
                                            "typeName": {
                                                "id": 373,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 372,
                                                    "name": "VRFV2PlusClient.RandomWordsRequest",
                                                    "nameLocations": [
                                                        "2044:15:4",
                                                        "2060:18:4"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 509,
                                                    "src": "2044:34:4"
                                                },
                                                "referencedDeclaration": 509,
                                                "src": "2044:34:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RandomWordsRequest_$509_storage_ptr",
                                                    "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2043:49:4"
                                },
                                "returnParameters": {
                                    "id": 378,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 377,
                                            "mutability": "mutable",
                                            "name": "requestId",
                                            "nameLocation": "2119:9:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 379,
                                            "src": "2111:17:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 376,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2111:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2110:19:4"
                                },
                                "scope": 380,
                                "src": "2016:114:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 381,
                        "src": "363:1769:4",
                        "usedErrors": [],
                        "usedEvents": []
                    }
                ],
                "src": "32:2101:4"
            },
            "id": 4
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
                "exportedSymbols": {
                    "IVRFMigratableConsumerV2Plus": [
                        394
                    ]
                },
                "id": 395,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 382,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:5"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IVRFMigratableConsumerV2Plus",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 383,
                            "nodeType": "StructuredDocumentation",
                            "src": "57:211:5",
                            "text": "@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."
                        },
                        "fullyImplemented": false,
                        "id": 394,
                        "linearizedBaseContracts": [
                            394
                        ],
                        "name": "IVRFMigratableConsumerV2Plus",
                        "nameLocation": "278:28:5",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "anonymous": false,
                                "eventSelector": "d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6",
                                "id": 387,
                                "name": "CoordinatorSet",
                                "nameLocation": "317:14:5",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 386,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 385,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "vrfCoordinator",
                                            "nameLocation": "340:14:5",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 387,
                                            "src": "332:22:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 384,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "332:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "331:24:5"
                                },
                                "src": "311:45:5"
                            },
                            {
                                "documentation": {
                                    "id": 388,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "360:131:5",
                                    "text": "@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"
                                },
                                "functionSelector": "8ea98117",
                                "id": 393,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setCoordinator",
                                "nameLocation": "503:14:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 391,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 390,
                                            "mutability": "mutable",
                                            "name": "vrfCoordinator",
                                            "nameLocation": "526:14:5",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 393,
                                            "src": "518:22:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 389,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "518:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "517:24:5"
                                },
                                "returnParameters": {
                                    "id": 392,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "550:0:5"
                                },
                                "scope": 394,
                                "src": "494:57:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 395,
                        "src": "268:285:5",
                        "usedErrors": [],
                        "usedEvents": [
                            387
                        ]
                    }
                ],
                "src": "32:522:5"
            },
            "id": 5
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
                "exportedSymbols": {
                    "IVRFSubscriptionV2Plus": [
                        483
                    ]
                },
                "id": 484,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 396,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:6"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IVRFSubscriptionV2Plus",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 397,
                            "nodeType": "StructuredDocumentation",
                            "src": "57:141:6",
                            "text": "@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."
                        },
                        "fullyImplemented": false,
                        "id": 483,
                        "linearizedBaseContracts": [
                            483
                        ],
                        "name": "IVRFSubscriptionV2Plus",
                        "nameLocation": "208:22:6",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 398,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "235:170:6",
                                    "text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
                                },
                                "functionSelector": "bec4c08c",
                                "id": 405,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addConsumer",
                                "nameLocation": "417:11:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 403,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 400,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "437:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 405,
                                            "src": "429:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 399,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "429:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 402,
                                            "mutability": "mutable",
                                            "name": "consumer",
                                            "nameLocation": "452:8:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 405,
                                            "src": "444:16:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 401,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "444:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "428:33:6"
                                },
                                "returnParameters": {
                                    "id": 404,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "470:0:6"
                                },
                                "scope": 483,
                                "src": "408:63:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 406,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "475:172:6",
                                    "text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
                                },
                                "functionSelector": "cb631797",
                                "id": 413,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "removeConsumer",
                                "nameLocation": "659:14:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 411,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 408,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "682:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 413,
                                            "src": "674:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 407,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "674:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 410,
                                            "mutability": "mutable",
                                            "name": "consumer",
                                            "nameLocation": "697:8:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 413,
                                            "src": "689:16:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 409,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "689:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "673:33:6"
                                },
                                "returnParameters": {
                                    "id": 412,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "715:0:6"
                                },
                                "scope": 483,
                                "src": "650:66:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 414,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "720:140:6",
                                    "text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
                                },
                                "functionSelector": "0ae09540",
                                "id": 421,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "cancelSubscription",
                                "nameLocation": "872:18:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 419,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 416,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "899:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 421,
                                            "src": "891:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 415,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "891:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 418,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nameLocation": "914:2:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 421,
                                            "src": "906:10:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 417,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "906:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "890:27:6"
                                },
                                "returnParameters": {
                                    "id": 420,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "926:0:6"
                                },
                                "scope": 483,
                                "src": "863:64:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 422,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "931:211:6",
                                    "text": " @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
                                },
                                "functionSelector": "b2a7cac5",
                                "id": 427,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "acceptSubscriptionOwnerTransfer",
                                "nameLocation": "1154:31:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 425,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 424,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "1194:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 427,
                                            "src": "1186:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 423,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1186:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1185:15:6"
                                },
                                "returnParameters": {
                                    "id": 426,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1209:0:6"
                                },
                                "scope": 483,
                                "src": "1145:65:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 428,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1214:164:6",
                                    "text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
                                },
                                "functionSelector": "dac83d29",
                                "id": 435,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "requestSubscriptionOwnerTransfer",
                                "nameLocation": "1390:32:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 433,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 430,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "1431:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 435,
                                            "src": "1423:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 429,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1423:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 432,
                                            "mutability": "mutable",
                                            "name": "newOwner",
                                            "nameLocation": "1446:8:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 435,
                                            "src": "1438:16:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 431,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1438:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1422:33:6"
                                },
                                "returnParameters": {
                                    "id": 434,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1464:0:6"
                                },
                                "scope": 483,
                                "src": "1381:84:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 436,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1469:613:6",
                                    "text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"
                                },
                                "functionSelector": "a21a23e4",
                                "id": 441,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "createSubscription",
                                "nameLocation": "2094:18:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 437,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2112:2:6"
                                },
                                "returnParameters": {
                                    "id": 440,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 439,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "2141:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 441,
                                            "src": "2133:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 438,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2133:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2132:15:6"
                                },
                                "scope": 483,
                                "src": "2085:63:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 442,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "2152:422:6",
                                    "text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
                                },
                                "functionSelector": "dc311dd3",
                                "id": 458,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getSubscription",
                                "nameLocation": "2586:15:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 445,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 444,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "2615:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2607:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 443,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2607:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2601:23:6"
                                },
                                "returnParameters": {
                                    "id": 457,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 447,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nameLocation": "2667:7:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2660:14:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint96",
                                                "typeString": "uint96"
                                            },
                                            "typeName": {
                                                "id": 446,
                                                "name": "uint96",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2660:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint96",
                                                    "typeString": "uint96"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 449,
                                            "mutability": "mutable",
                                            "name": "nativeBalance",
                                            "nameLocation": "2683:13:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2676:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint96",
                                                "typeString": "uint96"
                                            },
                                            "typeName": {
                                                "id": 448,
                                                "name": "uint96",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2676:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint96",
                                                    "typeString": "uint96"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 451,
                                            "mutability": "mutable",
                                            "name": "reqCount",
                                            "nameLocation": "2705:8:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2698:15:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                            },
                                            "typeName": {
                                                "id": 450,
                                                "name": "uint64",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2698:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 453,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nameLocation": "2723:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2715:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 452,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2715:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 456,
                                            "mutability": "mutable",
                                            "name": "consumers",
                                            "nameLocation": "2747:9:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 458,
                                            "src": "2730:26:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 454,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2730:7:6",
                                                    "stateMutability": "nonpayable",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 455,
                                                "nodeType": "ArrayTypeName",
                                                "src": "2730:9:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                                    "typeString": "address[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2659:98:6"
                                },
                                "scope": 483,
                                "src": "2577:181:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "41af6c87",
                                "id": 465,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "pendingRequestExists",
                                "nameLocation": "3063:20:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 461,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 460,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "3092:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 465,
                                            "src": "3084:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 459,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3084:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3083:15:6"
                                },
                                "returnParameters": {
                                    "id": 464,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 463,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 465,
                                            "src": "3122:4:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 462,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3122:4:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3121:6:6"
                                },
                                "scope": 483,
                                "src": "3054:74:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 466,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3132:427:6",
                                    "text": " @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"
                                },
                                "functionSelector": "aefb212f",
                                "id": 476,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getActiveSubscriptionIds",
                                "nameLocation": "3571:24:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 471,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 468,
                                            "mutability": "mutable",
                                            "name": "startIndex",
                                            "nameLocation": "3604:10:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 476,
                                            "src": "3596:18:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 467,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3596:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 470,
                                            "mutability": "mutable",
                                            "name": "maxCount",
                                            "nameLocation": "3624:8:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 476,
                                            "src": "3616:16:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 469,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3616:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3595:38:6"
                                },
                                "returnParameters": {
                                    "id": 475,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 474,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 476,
                                            "src": "3657:16:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 472,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3657:7:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 473,
                                                "nodeType": "ArrayTypeName",
                                                "src": "3657:9:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3656:18:6"
                                },
                                "scope": 483,
                                "src": "3562:113:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 477,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "3679:175:6",
                                    "text": " @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."
                                },
                                "functionSelector": "95b55cfc",
                                "id": 482,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "fundSubscriptionWithNative",
                                "nameLocation": "3866:26:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 480,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 479,
                                            "mutability": "mutable",
                                            "name": "subId",
                                            "nameLocation": "3901:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 482,
                                            "src": "3893:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 478,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3893:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3892:15:6"
                                },
                                "returnParameters": {
                                    "id": 481,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3924:0:6"
                                },
                                "scope": 483,
                                "src": "3857:68:6",
                                "stateMutability": "payable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 484,
                        "src": "198:3729:6",
                        "usedErrors": [],
                        "usedEvents": []
                    }
                ],
                "src": "32:3896:6"
            },
            "id": 6
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
                "exportedSymbols": {
                    "VRFV2PlusClient": [
                        525
                    ]
                },
                "id": 526,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 485,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".4"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:23:7"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "VRFV2PlusClient",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 525,
                        "linearizedBaseContracts": [
                            525
                        ],
                        "name": "VRFV2PlusClient",
                        "nameLocation": "90:15:7",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": true,
                                "functionSelector": "f7514ab4",
                                "id": 493,
                                "mutability": "constant",
                                "name": "EXTRA_ARGS_V1_TAG",
                                "nameLocation": "184:17:7",
                                "nodeType": "VariableDeclaration",
                                "scope": 525,
                                "src": "161:79:7",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                },
                                "typeName": {
                                    "id": 486,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "161:6:7",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    }
                                },
                                "value": {
                                    "arguments": [
                                        {
                                            "arguments": [
                                                {
                                                    "hexValue": "565246204578747261417267735631",
                                                    "id": 490,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "221:17:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
                                                        "typeString": "literal_string \"VRF ExtraArgsV1\""
                                                    },
                                                    "value": "VRF ExtraArgsV1"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
                                                        "typeString": "literal_string \"VRF ExtraArgsV1\""
                                                    }
                                                ],
                                                "id": 489,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967288,
                                                "src": "211:9:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                            },
                                            "id": 491,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "211:28:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        }
                                    ],
                                    "expression": {
                                        "argumentTypes": [
                                            {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        ],
                                        "id": 488,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "204:6:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes4_$",
                                            "typeString": "type(bytes4)"
                                        },
                                        "typeName": {
                                            "id": 487,
                                            "name": "bytes4",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "204:6:7",
                                            "typeDescriptions": {}
                                        }
                                    },
                                    "id": 492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "204:36:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "canonicalName": "VRFV2PlusClient.ExtraArgsV1",
                                "id": 496,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 495,
                                        "mutability": "mutable",
                                        "name": "nativePayment",
                                        "nameLocation": "274:13:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 496,
                                        "src": "269:18:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 494,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "269:4:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "ExtraArgsV1",
                                "nameLocation": "251:11:7",
                                "nodeType": "StructDefinition",
                                "scope": 525,
                                "src": "244:48:7",
                                "visibility": "public"
                            },
                            {
                                "canonicalName": "VRFV2PlusClient.RandomWordsRequest",
                                "id": 509,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 498,
                                        "mutability": "mutable",
                                        "name": "keyHash",
                                        "nameLocation": "336:7:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "328:15:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 497,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "328:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 500,
                                        "mutability": "mutable",
                                        "name": "subId",
                                        "nameLocation": "357:5:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "349:13:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 499,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "349:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 502,
                                        "mutability": "mutable",
                                        "name": "requestConfirmations",
                                        "nameLocation": "375:20:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "368:27:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                        },
                                        "typeName": {
                                            "id": 501,
                                            "name": "uint16",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "368:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint16",
                                                "typeString": "uint16"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 504,
                                        "mutability": "mutable",
                                        "name": "callbackGasLimit",
                                        "nameLocation": "410:16:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "403:23:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 503,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "403:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 506,
                                        "mutability": "mutable",
                                        "name": "numWords",
                                        "nameLocation": "439:8:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "432:15:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 505,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "432:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 508,
                                        "mutability": "mutable",
                                        "name": "extraArgs",
                                        "nameLocation": "459:9:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 509,
                                        "src": "453:15:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        },
                                        "typeName": {
                                            "id": 507,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "453:5:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                "typeString": "bytes"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "RandomWordsRequest",
                                "nameLocation": "303:18:7",
                                "nodeType": "StructDefinition",
                                "scope": 525,
                                "src": "296:177:7",
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 523,
                                    "nodeType": "Block",
                                    "src": "570:70:7",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 519,
                                                        "name": "EXTRA_ARGS_V1_TAG",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 493,
                                                        "src": "606:17:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        }
                                                    },
                                                    {
                                                        "id": 520,
                                                        "name": "extraArgs",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 512,
                                                        "src": "625:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                                            "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                                            "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 517,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "583:3:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 518,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "587:18:7",
                                                    "memberName": "encodeWithSelector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "583:22:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 521,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "583:52:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            "functionReturnParameters": 516,
                                            "id": 522,
                                            "nodeType": "Return",
                                            "src": "576:59:7"
                                        }
                                    ]
                                },
                                "id": 524,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_argsToBytes",
                                "nameLocation": "486:12:7",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 513,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 512,
                                            "mutability": "mutable",
                                            "name": "extraArgs",
                                            "nameLocation": "518:9:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 524,
                                            "src": "499:28:7",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                                "typeString": "struct VRFV2PlusClient.ExtraArgsV1"
                                            },
                                            "typeName": {
                                                "id": 511,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 510,
                                                    "name": "ExtraArgsV1",
                                                    "nameLocations": [
                                                        "499:11:7"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 496,
                                                    "src": "499:11:7"
                                                },
                                                "referencedDeclaration": 496,
                                                "src": "499:11:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_ExtraArgsV1_$496_storage_ptr",
                                                    "typeString": "struct VRFV2PlusClient.ExtraArgsV1"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "498:30:7"
                                },
                                "returnParameters": {
                                    "id": 516,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 515,
                                            "mutability": "mutable",
                                            "name": "bts",
                                            "nameLocation": "565:3:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 524,
                                            "src": "552:16:7",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 514,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "552:5:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "551:18:7"
                                },
                                "scope": 525,
                                "src": "477:163:7",
                                "stateMutability": "pure",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 526,
                        "src": "82:560:7",
                        "usedErrors": [],
                        "usedEvents": []
                    }
                ],
                "src": "32:611:7"
            },
            "id": 7
        },
        "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol": {
            "ast": {
                "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/src/Raffle.sol",
                "exportedSymbols": {
                    "Raffle": [
                        696
                    ],
                    "VRFConsumerBaseV2Plus": [
                        362
                    ],
                    "VRFV2PlusClient": [
                        525
                    ]
                },
                "id": 697,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 527,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".19"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "32:24:8"
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
                        "file": "../lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
                        "id": 529,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 697,
                        "sourceUnit": 363,
                        "src": "58:130:8",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 528,
                                    "name": "VRFConsumerBaseV2Plus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 362,
                                    "src": "66:21:8",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "c:/Users/Mir Mohmmad Luqman/Documents/Practice Projects/Foundry-Lottery/lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
                        "file": "../lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
                        "id": 531,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 697,
                        "sourceUnit": 526,
                        "src": "189:128:8",
                        "symbolAliases": [
                            {
                                "foreign": {
                                    "id": 530,
                                    "name": "VRFV2PlusClient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "197:15:8",
                                    "typeDescriptions": {}
                                },
                                "nameLocation": "-1:-1:-1"
                            }
                        ],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 533,
                                    "name": "VRFConsumerBaseV2Plus",
                                    "nameLocations": [
                                        "1053:21:8"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 362,
                                    "src": "1053:21:8"
                                },
                                "id": 534,
                                "nodeType": "InheritanceSpecifier",
                                "src": "1053:21:8"
                            }
                        ],
                        "canonicalName": "Raffle",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 532,
                            "nodeType": "StructuredDocumentation",
                            "src": "868:165:8",
                            "text": " @title RAFFLE_LOTTERY\n @author Mir Mohmmad Luqman\n @notice This contract is created for sample raffle lottery.\n @dev Implements Chainlink VRFv2.5"
                        },
                        "fullyImplemented": true,
                        "id": 696,
                        "linearizedBaseContracts": [
                            696,
                            362,
                            20,
                            183,
                            199,
                            394
                        ],
                        "name": "Raffle",
                        "nameLocation": "1043:6:8",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "errorSelector": "3569c8ba",
                                "id": 536,
                                "name": "NotEnoughEthEntered",
                                "nameLocation": "1200:19:8",
                                "nodeType": "ErrorDefinition",
                                "parameters": {
                                    "id": 535,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1219:2:8"
                                },
                                "src": "1194:28:8"
                            },
                            {
                                "anonymous": false,
                                "eventSelector": "634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb47",
                                "id": 540,
                                "name": "RaffleEntered",
                                "nameLocation": "1347:13:8",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 539,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 538,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "player",
                                            "nameLocation": "1377:6:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 540,
                                            "src": "1361:22:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 537,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1361:7:8",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1360:24:8"
                                },
                                "src": "1341:44:8"
                            },
                            {
                                "constant": true,
                                "id": 543,
                                "mutability": "constant",
                                "name": "REQUREST_CONFIRMATIONS",
                                "nameLocation": "1530:22:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1506:50:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                },
                                "typeName": {
                                    "id": 541,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1506:6:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                    }
                                },
                                "value": {
                                    "hexValue": "33",
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1555:1:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": true,
                                "id": 546,
                                "mutability": "constant",
                                "name": "NUMWORDS",
                                "nameLocation": "1586:8:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1562:36:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                },
                                "typeName": {
                                    "id": 544,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1562:6:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                    }
                                },
                                "value": {
                                    "hexValue": "31",
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1597:1:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 549,
                                "mutability": "mutable",
                                "name": "sPlayers",
                                "nameLocation": "1671:8:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1645:34:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                    "typeString": "address payable[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 547,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1645:15:8",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "id": 548,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1645:17:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                        "typeString": "address payable[]"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 551,
                                "mutability": "mutable",
                                "name": "sLastTimeStamp",
                                "nameLocation": "1701:14:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1685:30:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1685:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "functionSelector": "8c5f83ee",
                                "id": 553,
                                "mutability": "immutable",
                                "name": "I_ENTRANCEFEE",
                                "nameLocation": "1746:13:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1721:38:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 552,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1721:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 555,
                                "mutability": "immutable",
                                "name": "I_KEYHASH",
                                "nameLocation": "1826:9:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1800:35:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                },
                                "typeName": {
                                    "id": 554,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1800:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 557,
                                "mutability": "immutable",
                                "name": "I_SUBSCRIPTIONID",
                                "nameLocation": "1888:16:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1862:42:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 556,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1862:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 559,
                                "mutability": "immutable",
                                "name": "I_INTERVAL",
                                "nameLocation": "1936:10:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1910:36:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 558,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1910:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 561,
                                "mutability": "immutable",
                                "name": "I_CALLBACKGASLIMIT",
                                "nameLocation": "2016:18:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 696,
                                "src": "1991:43:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                },
                                "typeName": {
                                    "id": 560,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1991:6:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 604,
                                    "nodeType": "Block",
                                    "src": "2406:281:8",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 582,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 579,
                                                    "name": "sLastTimeStamp",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 551,
                                                    "src": "2416:14:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 580,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967292,
                                                        "src": "2433:5:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 581,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "2439:9:8",
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2433:15:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2416:32:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 583,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2416:32:8"
                                        },
                                        {
                                            "expression": {
                                                "id": 586,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 584,
                                                    "name": "I_ENTRANCEFEE",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 553,
                                                    "src": "2502:13:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 585,
                                                    "name": "entranceFee",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 563,
                                                    "src": "2518:11:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2502:27:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 587,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2502:27:8"
                                        },
                                        {
                                            "expression": {
                                                "id": 590,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 588,
                                                    "name": "I_INTERVAL",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 559,
                                                    "src": "2539:10:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 589,
                                                    "name": "interval",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 565,
                                                    "src": "2552:8:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2539:21:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 591,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2539:21:8"
                                        },
                                        {
                                            "expression": {
                                                "id": 594,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 592,
                                                    "name": "I_KEYHASH",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 555,
                                                    "src": "2570:9:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 593,
                                                    "name": "gaselane",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 569,
                                                    "src": "2582:8:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "src": "2570:20:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 595,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2570:20:8"
                                        },
                                        {
                                            "expression": {
                                                "id": 598,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 596,
                                                    "name": "I_SUBSCRIPTIONID",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 557,
                                                    "src": "2600:16:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 597,
                                                    "name": "SubscriptionId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 571,
                                                    "src": "2619:14:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2600:33:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 599,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2600:33:8"
                                        },
                                        {
                                            "expression": {
                                                "id": 602,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 600,
                                                    "name": "I_CALLBACKGASLIMIT",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 561,
                                                    "src": "2643:18:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint32",
                                                        "typeString": "uint32"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 601,
                                                    "name": "callbackGasLimit",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 573,
                                                    "src": "2664:16:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint32",
                                                        "typeString": "uint32"
                                                    }
                                                },
                                                "src": "2643:37:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint32",
                                                    "typeString": "uint32"
                                                }
                                            },
                                            "id": 603,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2643:37:8"
                                        }
                                    ]
                                },
                                "id": 605,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "id": 576,
                                                "name": "_vrfCoordinator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 567,
                                                "src": "2389:15:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 577,
                                        "kind": "baseConstructorSpecifier",
                                        "modifierName": {
                                            "id": 575,
                                            "name": "VRFConsumerBaseV2Plus",
                                            "nameLocations": [
                                                "2367:21:8"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 362,
                                            "src": "2367:21:8"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2367:38:8"
                                    }
                                ],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 574,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 563,
                                            "mutability": "mutable",
                                            "name": "entranceFee",
                                            "nameLocation": "2186:11:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2178:19:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 562,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2178:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 565,
                                            "mutability": "mutable",
                                            "name": "interval",
                                            "nameLocation": "2215:8:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2207:16:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 564,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2207:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 567,
                                            "mutability": "mutable",
                                            "name": "_vrfCoordinator",
                                            "nameLocation": "2241:15:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2233:23:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 566,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2233:7:8",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 569,
                                            "mutability": "mutable",
                                            "name": "gaselane",
                                            "nameLocation": "2274:8:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2266:16:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 568,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2266:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 571,
                                            "mutability": "mutable",
                                            "name": "SubscriptionId",
                                            "nameLocation": "2313:14:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2305:22:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 570,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2305:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 573,
                                            "mutability": "mutable",
                                            "name": "callbackGasLimit",
                                            "nameLocation": "2344:16:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 605,
                                            "src": "2337:23:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            },
                                            "typeName": {
                                                "id": 572,
                                                "name": "uint32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2337:6:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint32",
                                                    "typeString": "uint32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2168:198:8"
                                },
                                "returnParameters": {
                                    "id": 578,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2406:0:8"
                                },
                                "scope": 696,
                                "src": "2157:530:8",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 632,
                                    "nodeType": "Block",
                                    "src": "2848:628:8",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 611,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 608,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "3187:3:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 609,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3191:5:8",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3187:9:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 610,
                                                    "name": "I_ENTRANCEFEE",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 553,
                                                    "src": "3200:13:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3187:26:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 616,
                                            "nodeType": "IfStatement",
                                            "src": "3183:91:8",
                                            "trueBody": {
                                                "id": 615,
                                                "nodeType": "Block",
                                                "src": "3215:59:8",
                                                "statements": [
                                                    {
                                                        "errorCall": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 612,
                                                                "name": "NotEnoughEthEntered",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 536,
                                                                "src": "3236:19:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                                    "typeString": "function () pure returns (error)"
                                                                }
                                                            },
                                                            "id": 613,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3236:21:8",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_error",
                                                                "typeString": "error"
                                                            }
                                                        },
                                                        "id": 614,
                                                        "nodeType": "RevertStatement",
                                                        "src": "3229:28:8"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 622,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "3305:3:8",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 623,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberLocation": "3309:6:8",
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3305:10:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 621,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3297:8:8",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                                "typeString": "type(address payable)"
                                                            },
                                                            "typeName": {
                                                                "id": 620,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3297:8:8",
                                                                "stateMutability": "payable",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 624,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3297:19:8",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 617,
                                                        "name": "sPlayers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 549,
                                                        "src": "3283:8:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                            "typeString": "address payable[] storage ref"
                                                        }
                                                    },
                                                    "id": 619,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3292:4:8",
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3283:13:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                                                        "typeString": "function (address payable[] storage pointer,address payable)"
                                                    }
                                                },
                                                "id": 625,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3283:34:8",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 626,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3283:34:8"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 628,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "3385:3:8",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 629,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "3389:6:8",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3385:10:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 627,
                                                    "name": "RaffleEntered",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 540,
                                                    "src": "3371:13:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 630,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3371:25:8",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 631,
                                            "nodeType": "EmitStatement",
                                            "src": "3366:30:8"
                                        }
                                    ]
                                },
                                "functionSelector": "2cfcc539",
                                "id": 633,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "enterRaffle",
                                "nameLocation": "2817:11:8",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 606,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2828:2:8"
                                },
                                "returnParameters": {
                                    "id": 607,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2848:0:8"
                                },
                                "scope": 696,
                                "src": "2808:668:8",
                                "stateMutability": "payable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 676,
                                    "nodeType": "Block",
                                    "src": "3621:808:8",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 642,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 639,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "id": 636,
                                                                    "name": "block",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967292,
                                                                    "src": "3706:5:8",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_block",
                                                                        "typeString": "block"
                                                                    }
                                                                },
                                                                "id": 637,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberLocation": "3712:9:8",
                                                                "memberName": "timestamp",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3706:15:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "-",
                                                            "rightExpression": {
                                                                "id": 638,
                                                                "name": "sLastTimeStamp",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 551,
                                                                "src": "3724:14:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "3706:32:8",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 640,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "3705:34:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 641,
                                                    "name": "I_INTERVAL",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 559,
                                                    "src": "3742:10:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3705:47:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 647,
                                            "nodeType": "IfStatement",
                                            "src": "3701:92:8",
                                            "trueBody": {
                                                "id": 646,
                                                "nodeType": "Block",
                                                "src": "3754:39:8",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 643,
                                                                "name": "revert",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967277,
                                                                    4294967277
                                                                ],
                                                                "referencedDeclaration": 4294967277,
                                                                "src": "3768:6:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                                                    "typeString": "function () pure"
                                                                }
                                                            },
                                                            "id": 644,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3768:8:8",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 645,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "3768:8:8"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "assignments": [
                                                652
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 652,
                                                    "mutability": "mutable",
                                                    "name": "request",
                                                    "nameLocation": "3845:7:8",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 676,
                                                    "src": "3803:49:8",
                                                    "stateVariable": false,
                                                    "storageLocation": "memory",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                                        "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                                                    },
                                                    "typeName": {
                                                        "id": 651,
                                                        "nodeType": "UserDefinedTypeName",
                                                        "pathNode": {
                                                            "id": 650,
                                                            "name": "VRFV2PlusClient.RandomWordsRequest",
                                                            "nameLocations": [
                                                                "3803:15:8",
                                                                "3819:18:8"
                                                            ],
                                                            "nodeType": "IdentifierPath",
                                                            "referencedDeclaration": 509,
                                                            "src": "3803:34:8"
                                                        },
                                                        "referencedDeclaration": 509,
                                                        "src": "3803:34:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_RandomWordsRequest_$509_storage_ptr",
                                                            "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 668,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 655,
                                                        "name": "I_KEYHASH",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 555,
                                                        "src": "3913:9:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "id": 656,
                                                        "name": "I_SUBSCRIPTIONID",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 557,
                                                        "src": "3943:16:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 657,
                                                        "name": "REQUREST_CONFIRMATIONS",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 543,
                                                        "src": "3995:22:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint16",
                                                            "typeString": "uint16"
                                                        }
                                                    },
                                                    {
                                                        "id": 658,
                                                        "name": "I_CALLBACKGASLIMIT",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 561,
                                                        "src": "4049:18:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint32",
                                                            "typeString": "uint32"
                                                        }
                                                    },
                                                    {
                                                        "id": 659,
                                                        "name": "NUMWORDS",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 546,
                                                        "src": "4091:8:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint32",
                                                            "typeString": "uint32"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "66616c7365",
                                                                        "id": 664,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "bool",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "4316:5:8",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        },
                                                                        "value": "false"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 662,
                                                                        "name": "VRFV2PlusClient",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 525,
                                                                        "src": "4272:15:8",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$525_$",
                                                                            "typeString": "type(library VRFV2PlusClient)"
                                                                        }
                                                                    },
                                                                    "id": 663,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "4288:11:8",
                                                                    "memberName": "ExtraArgsV1",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 496,
                                                                    "src": "4272:27:8",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_struct$_ExtraArgsV1_$496_storage_ptr_$",
                                                                        "typeString": "type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"
                                                                    }
                                                                },
                                                                "id": 665,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "structConstructorCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [
                                                                    "4301:13:8"
                                                                ],
                                                                "names": [
                                                                    "nativePayment"
                                                                ],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4272:51:8",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                                                    "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                                                    "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 660,
                                                                "name": "VRFV2PlusClient",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 525,
                                                                "src": "4124:15:8",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$525_$",
                                                                    "typeString": "type(library VRFV2PlusClient)"
                                                                }
                                                            },
                                                            "id": 661,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "4140:12:8",
                                                            "memberName": "_argsToBytes",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 524,
                                                            "src": "4124:28:8",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_struct$_ExtraArgsV1_$496_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 666,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4124:213:8",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint16",
                                                            "typeString": "uint16"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint32",
                                                            "typeString": "uint32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint32",
                                                            "typeString": "uint32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 653,
                                                        "name": "VRFV2PlusClient",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 525,
                                                        "src": "3855:15:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$525_$",
                                                            "typeString": "type(library VRFV2PlusClient)"
                                                        }
                                                    },
                                                    "id": 654,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3871:18:8",
                                                    "memberName": "RandomWordsRequest",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 509,
                                                    "src": "3855:34:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_struct$_RandomWordsRequest_$509_storage_ptr_$",
                                                        "typeString": "type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"
                                                    }
                                                },
                                                "id": 667,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "structConstructorCall",
                                                "lValueRequested": false,
                                                "nameLocations": [
                                                    "3904:7:8",
                                                    "3936:5:8",
                                                    "3973:20:8",
                                                    "4031:16:8",
                                                    "4081:8:8",
                                                    "4113:9:8"
                                                ],
                                                "names": [
                                                    "keyHash",
                                                    "subId",
                                                    "requestConfirmations",
                                                    "callbackGasLimit",
                                                    "numWords",
                                                    "extraArgs"
                                                ],
                                                "nodeType": "FunctionCall",
                                                "src": "3855:493:8",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                                    "typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3803:545:8"
                                        },
                                        {
                                            "assignments": [
                                                670
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 670,
                                                    "mutability": "mutable",
                                                    "name": "requestId",
                                                    "nameLocation": "4366:9:8",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 676,
                                                    "src": "4358:17:8",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 669,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4358:7:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 675,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 673,
                                                        "name": "request",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 652,
                                                        "src": "4414:7:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                                            "typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                                            "typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 671,
                                                        "name": "s_vrfCoordinator",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 231,
                                                        "src": "4378:16:8",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                                            "typeString": "contract IVRFCoordinatorV2Plus"
                                                        }
                                                    },
                                                    "id": 672,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4395:18:8",
                                                    "memberName": "requestRandomWords",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 379,
                                                    "src": "4378:35:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$509_memory_ptr_$returns$_t_uint256_$",
                                                        "typeString": "function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"
                                                    }
                                                },
                                                "id": 674,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4378:44:8",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "4358:64:8"
                                        }
                                    ]
                                },
                                "functionSelector": "5d495aea",
                                "id": 677,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "pickWinner",
                                "nameLocation": "3599:10:8",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 634,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3609:2:8"
                                },
                                "returnParameters": {
                                    "id": 635,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3621:0:8"
                                },
                                "scope": 696,
                                "src": "3590:839:8",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    268
                                ],
                                "body": {
                                    "id": 686,
                                    "nodeType": "Block",
                                    "src": "4532:16:8",
                                    "statements": []
                                },
                                "id": 687,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "fulfillRandomWords",
                                "nameLocation": "4444:18:8",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 684,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "4523:8:8"
                                },
                                "parameters": {
                                    "id": 683,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 679,
                                            "mutability": "mutable",
                                            "name": "requestId",
                                            "nameLocation": "4471:9:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 687,
                                            "src": "4463:17:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 678,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4463:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 682,
                                            "mutability": "mutable",
                                            "name": "randomWords",
                                            "nameLocation": "4501:11:8",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 687,
                                            "src": "4482:30:8",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 680,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4482:7:8",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 681,
                                                "nodeType": "ArrayTypeName",
                                                "src": "4482:9:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4462:51:8"
                                },
                                "returnParameters": {
                                    "id": 685,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4532:0:8"
                                },
                                "scope": 696,
                                "src": "4435:113:8",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 694,
                                    "nodeType": "Block",
                                    "src": "4726:37:8",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 692,
                                                "name": "I_ENTRANCEFEE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 553,
                                                "src": "4743:13:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 691,
                                            "id": 693,
                                            "nodeType": "Return",
                                            "src": "4736:20:8"
                                        }
                                    ]
                                },
                                "functionSelector": "09bc33a7",
                                "id": 695,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getEntranceFee",
                                "nameLocation": "4677:14:8",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 688,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4691:2:8"
                                },
                                "returnParameters": {
                                    "id": 691,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 690,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 695,
                                            "src": "4717:7:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 689,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4717:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4716:9:8"
                                },
                                "scope": 696,
                                "src": "4668:95:8",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 697,
                        "src": "1034:3731:8",
                        "usedErrors": [
                            218,
                            226,
                            228,
                            536
                        ],
                        "usedEvents": [
                            37,
                            43,
                            387,
                            540
                        ]
                    }
                ],
                "src": "32:5139:8"
            },
            "id": 8
        }
    }
}